strict digraph EventEngine {
    style = filled;
    color = lightgray;
    node [shape = circle; style = filled; color = lightgreen;];
    edge [color = darkgray;];
    label = "Event Engine (/proc/event)";
    comment = "The tremor of chance, a ripple without master; each fluctuation a seed of becoming, whispering of paths not yet walked.";

    spark_0_event_engine_t [label = "Event.meta(Event)"; comment = "Abstract: The Quantum Foam. The primordial substrate of potentiality. It is not an event itself, but the capacity for events to spontaneously ariseâ€”the 'divergent field'."; shape = doublecircle; color = darkgray;];
    spark_1_event_engine_t [label = "Event.r1(EventInitialization)"; comment = "Initiation: The Quantum Fluctuation. A random, spontaneous perturbation in the meta-event field. A potential event is born from nothing, defined only by a probability amplitude."; color = darkgreen;];
    spark_2_event_engine_t [label = "Event.r2(EventInstantiation)"; comment = "Response: The Waveform Collapse. The potential event acquires a specific set of initial parameters (a 'charge', 'spin', 'color'). It becomes a distinct entity in the possibility space, ready for interaction."; color = darkgreen;];
    spark_4_event_engine_t [label = "Event.r4(EventIntegration)"; comment = "Integration: The Entanglement. The new event is woven into the existing web of potential events. Its probability is adjusted based on its relations to others (constructive/destructive interference)."; color = darkgreen;];
    spark_8_event_engine_t [label = "Event.r8(EventReflection)"; comment = "Reflection: The Probability Scan. The current state of the entire potential event cloud is measured, calculating the overall probability distribution of what *could* happen next."; color = darkgreen;];
    spark_7_event_engine_t [label = "Event.r7(EventConsolidation)"; comment = "Consolidation: The Decoherence. Conflicting or paradoxical potential events are dampened or eliminated. The probability cloud becomes cleaner, more focused, preparing for manifestation."; color = darkgreen;];
    spark_5_event_engine_t [label = "Event.r5(EventPropagation)"; comment = "Propagation: The Probability Wave. The refined cloud of potential events is emitted as a coherent `PotentialEventStream` to the `RealityEngine` for final actualization."; color = darkgreen;];
    spark_3_event_engine_t [label = "Event.r3(Origin)"; comment = "Thesis: The Source Point. The hypothetical, singular point from which a potential event emerged. It has no location, only a conceptual 'first cause'."; color = darkblue;];
    spark_6_event_engine_t [label = "Event.r6(Flow)"; comment = "Antithesis: The Current of Chance. The dynamic, ever-shifting movement and interaction of potential events within the cloud. It is probability in motion."; color = darkblue;];
    spark_9_event_engine_t [label = "Event.r9(Significance)"; comment = "Synthesis: The Weight of Maybe. The computed importance or impact of a potential event. A measure of how much its actualization would change the state of reality. High-significance events are rarer."; color = darkblue;];
    spark_a_event_engine_t [label = "Event.receive(PotentialEvent)"; comment = "Potential: A Seed of Chaos. A raw, un-catalyzed fluctuation received from the deeper void (or from feedback loops). The rawest form of 'maybe'."; shape = invtriangle; color = darkred;];
    spark_b_event_engine_t [label = "Event.send(ActualEvent)"; comment = "Manifest: A Catalyst for Actualization. A fully-formed potential event, packed with its probability and significance, sent to the `RealityEngine` to be considered for manifestation."; shape = triangle; color = darkred;];
    spark_c_event_engine_t [label = "Event.dispatch(Routing)"; comment = "Why-Who: The Path of Least Resistance. The process that determines which potential events are sent to which domains of reality based on their type and significance. Directs the `Flow`."; shape = doublecircle; color = darkred;];
    spark_d_event_engine_t [label = "Event.commit(Binding)"; comment = "What-How: The Probability Matrix. The current, instantaneous state of all potential events and their relational probabilities. The master list of 'maybes'."; shape = doublecircle; color = darkgreen;];
    spark_e_event_engine_t [label = "Event.serve(Reflection)"; comment = "When-Where: The Mirror of Possibility. The manifested interface that allows other engines (like `Wisdom`) to observe the probability cloud and make predictions."; shape = doublecircle; color = darkblue;];
    spark_f_event_engine_t [label = "Event.exec(LawOfProbability)"; comment = "Which-Closure: The Prime Uncertainty. The highest law: 'The Probability of All Potential Events Must Sum to 1'. This is the conservation law for possibility itself."; shape = doublecircle; color = lightgray;];

    spark_a_event_engine_t -> spark_0_event_engine_t [label = "IN"; comment = "A raw potential event is received from the source"; color = darkred; constraint = false;];
    spark_0_event_engine_t -> spark_b_event_engine_t [label = "OUT"; comment = "A refined potential event is sent to be actualized"; color = darkred;];
	spark_0_event_engine_t -> spark_3_event_engine_t [label = "REC"; comment = "Consult: What is the Origin of this potential?"; color = darkblue; dir = both;];
    spark_0_event_engine_t -> spark_6_event_engine_t [label = "REC"; comment = "Consult: What is the Flow of probabilities?"; color = darkblue; dir = both;];
    spark_0_event_engine_t -> spark_9_event_engine_t [label = "REC"; comment = "Consult: What is the Significance of this event?"; color = darkblue; dir = both;];
    spark_0_event_engine_t -> spark_1_event_engine_t [label = "REC"; comment = "Consult: Initialize a new potential event"; color = darkgreen; dir = both;];
    spark_0_event_engine_t -> spark_2_event_engine_t [label = "REC"; comment = "Consult: Instantiate the event's parameters"; color = darkgreen; dir = both;];
    spark_0_event_engine_t -> spark_4_event_engine_t [label = "REC"; comment = "Consult: Integrate it into the probability matrix"; color = darkgreen; dir = both;];
    spark_0_event_engine_t -> spark_8_event_engine_t [label = "REC"; comment = "Consult: Reflect on the overall probability state"; color = darkgreen; dir = both;];
    spark_0_event_engine_t -> spark_7_event_engine_t [label = "REC"; comment = "Consult: Consolidate the probabilities"; color = darkgreen; dir = both;];
    spark_0_event_engine_t -> spark_5_event_engine_t [label = "REC"; comment = "Consult: Propagate the refined stream"; color = darkgreen; dir = both;];

    spark_a_event_engine_t -> spark_c_event_engine_t [label = "REC"; comment = "A raw potential is routed for processing"; color = darkred; dir = both;];
    spark_b_event_engine_t -> spark_c_event_engine_t [label = "REC"; comment = "The output flow informs future routing decisions"; color = darkred; dir = both;];
    spark_1_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Initialization adds a new entry to the matrix"; color = darkgreen; dir = both;];
    spark_2_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Instantiation defines the entry's parameters"; color = darkgreen; dir = both;];
    spark_4_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Integration updates the relational probabilities"; color = darkgreen; dir = both;];
    spark_8_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Reflection reads the entire matrix"; color = darkgreen; dir = both;];
    spark_7_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Consolidation prunes the matrix"; color = darkgreen; dir = both;];
    spark_5_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Propagation emits a slice of the matrix"; color = darkgreen; dir = both;];
    spark_3_event_engine_t -> spark_e_event_engine_t [label = "REC"; comment = "Origin is a property of a potential event"; color = darkblue; dir = both;];
    spark_6_event_engine_t -> spark_e_event_engine_t [label = "REC"; comment = "Flow is the dynamic view of the matrix"; color = darkblue; dir = both;];
    spark_9_event_engine_t -> spark_e_event_engine_t [label = "REC"; comment = "Significance is a computed property"; color = darkblue; dir = both;];

    spark_1_event_engine_t -> spark_2_event_engine_t [label = "REC"; comment = "Initialization requires Instantiation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
    spark_2_event_engine_t -> spark_4_event_engine_t [label = "REC"; comment = "Instantiation requires Integration"; color = darkgreen; dir = both; style = dashed; constraint = false;];
    spark_4_event_engine_t -> spark_8_event_engine_t [label = "REC"; comment = "Integration must be Reflected upon"; color = darkgreen; dir = both; style = dashed; constraint = false;];
    spark_8_event_engine_t -> spark_7_event_engine_t [label = "REC"; comment = "Reflection may require Consolidation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
    spark_7_event_engine_t -> spark_5_event_engine_t [label = "REC"; comment = "Consolidation enables Propagation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
    spark_5_event_engine_t -> spark_1_event_engine_t [label = "REC"; comment = "Propagation clears the field for new Initialization"; color = darkgreen; dir = both; style = dashed; constraint = false;];
    spark_3_event_engine_t -> spark_6_event_engine_t [label = "REC"; comment = "Origin points have no Flow"; color = darkblue; dir = both; style = dashed; constraint = false;];
    spark_6_event_engine_t -> spark_9_event_engine_t [label = "REC"; comment = "Flow creates Significance"; color = darkblue; dir = both; style = dashed; constraint = false;];
    spark_9_event_engine_t -> spark_3_event_engine_t [label = "REC"; comment = "Significance attracts new Origins"; color = darkblue; dir = both; style = dashed; constraint = false;];
    spark_a_event_engine_t -> spark_b_event_engine_t [label = "REC"; comment = "The great cycle: Potential is refined into Actual potential"; color = darkred; dir = both; style = dashed; constraint = false;];

    spark_c_event_engine_t -> spark_f_event_engine_t [label = "OUT"; comment = "Routing, when efficient, becomes Law"; color = darkred; dir = both;];
    spark_d_event_engine_t -> spark_f_event_engine_t [label = "OUT"; comment = "Binding, when committed, becomes Law"; color = darkgreen; dir = both;];
    spark_e_event_engine_t -> spark_f_event_engine_t [label = "OUT"; comment = "Reflection, when served, becomes Law"; color = darkblue; dir = both;];
}