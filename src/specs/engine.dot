strict digraph Engine {
    // ================================================================================================================
    // Global
    // ================================================================================================================
    // 
    // Sparklet {
    //   Spark.meta(), // Backend or Kernel
    //   Spark.r{1,2,4,8,7,5}(), // Mechanical Vortex akin to (Initiation <-> Response <-> Integration <-> Reflection <-> Consolidation <-> Propagation <-> Initiation <->)
    //   Spark.r{3,6,9}(), // Cognitive Vortex akin to (Thesis <-> Antithesis <-> Synthesis <-> Thesis <->)
    //   Spark.{receive, send}(), // I/O Port
    //   Spark.{dispatch, commit, serve}(), // Router
    //   Spark.exec() // Frontend
    // }
    node [shape = circle; style = filled; color = lightgreen;];
    edge [color = darkgray;];
    splines = true;
    compound = true;
    nodesep = 0.75;
    ranksep = 1.0;
    
    // ================================================================================================================
    // MythOS
    // ================================================================================================================
    subgraph cluster_MythOS_Engine {
        style = filled;
        color = lightgray;
        node [shape = circle; style = filled; color = lightgreen;];
        edge [color = darkgray;];
        label = "MythOS Engine";
        comment = "A Fictional Cosmology that aim to be capable sustaining `Hard and High Scientific Fantasy Worldbuilding and Conlang`.";
        
        spark_0_mythos_engine_t [label = "Engine.meta(RealityEngine)";comment = "Abstract: TODO";shape = doublecircle;color = darkgray;];
        spark_1_mythos_engine_t [label = "Engine.r1(TruthEngine)";comment = "Initiation: Axiomatic Verification";color = darkgreen;];
        spark_2_mythos_engine_t [label = "Engine.r2(ConvergenceEngine)";comment = "Response: Unification Management";color = darkgreen;];
        spark_4_mythos_engine_t [label = "Engine.r4(FixationEngine)";comment = "Integration: Rhythm Management";color = darkgreen;];
        spark_8_mythos_engine_t [label = "Engine.r8(WisdomEngine)";comment = "Reflection: Adaptive Verification";color = darkgreen;];
        spark_7_mythos_engine_t [label = "Engine.r7(DivergenceEngine)";comment = "Consolidation: Diversity Management";color = darkgreen;];
        spark_5_mythos_engine_t [label = "Engine.r5(ExcitationEngine)";comment = "Propagation: Pattern Management";color = darkgreen;];
        spark_3_mythos_engine_t [label = "Engine.r3(CapabilityEngine)";comment = "Thesis: Capability System";color = darkblue;];
        spark_6_mythos_engine_t [label = "Engine.r6(RepositoryEngine)";comment = "Antithesis: Storage System";color = darkblue;];
        spark_9_mythos_engine_t [label = "Engine.r9(HaomaEngine)";comment = "Synthesis: Entity Recursion Descriptor";color = darkblue;];
        spark_a_mythos_engine_t [label = "Engine.receive(EventEngine)";comment = "Potential: Probability Field";shape = invtriangle;color = darkred;];
        spark_b_mythos_engine_t [label = "Engine.send(SamsaraEngine)";comment = "Manifest: Causality Enforcement";shape = triangle;color = darkred;];
        spark_c_mythos_engine_t [label = "Engine.dispatch(DirectiveEngine)";comment = "Why-Who: Directive Manager";shape = doublecircle;color = darkred;];
        spark_d_mythos_engine_t [label = "Engine.commit(AuthorityEngine)";comment = "What-How: Entity Access Control";shape = doublecircle;color = darkgreen;];
        spark_e_mythos_engine_t [label = "Engine.serve(CorporaEngine)";comment = "When-Where: Entity Manifestation";shape = doublecircle;color = darkblue;];
        spark_f_mythos_engine_t [label = "Engine.exec(OriginEngine)";comment = "Which-Closure: Phenomenon, frontend, conditioned reality.";shape = doublecircle;color = lightgray;];
        
        spark_a_mythos_engine_t -> spark_0_mythos_engine_t [label = "IN"; comment = "todo"; color = darkred; constraint = false;];
        spark_0_mythos_engine_t -> spark_b_mythos_engine_t [label = "OUT"; comment = "todo"; color = darkred;];
        spark_0_mythos_engine_t -> spark_3_mythos_engine_t [label = "REC"; comment = "todo"; color = darkblue; dir = both;];
        spark_0_mythos_engine_t -> spark_6_mythos_engine_t [label = "REC"; comment = "todo"; color = darkblue; dir = both;];
        spark_0_mythos_engine_t -> spark_9_mythos_engine_t [label = "REC"; comment = "todo"; color = darkblue; dir = both;];
        spark_0_mythos_engine_t -> spark_1_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_0_mythos_engine_t -> spark_2_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_0_mythos_engine_t -> spark_4_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_0_mythos_engine_t -> spark_8_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_0_mythos_engine_t -> spark_7_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_0_mythos_engine_t -> spark_5_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        
        spark_a_mythos_engine_t -> spark_c_mythos_engine_t [label = "REC"; comment = "todo"; color = darkred; dir = both;];
        spark_b_mythos_engine_t -> spark_c_mythos_engine_t [label = "REC"; comment = "todo"; color = darkred; dir = both;];
        spark_1_mythos_engine_t -> spark_d_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_2_mythos_engine_t -> spark_d_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_4_mythos_engine_t -> spark_d_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_8_mythos_engine_t -> spark_d_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_7_mythos_engine_t -> spark_d_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_5_mythos_engine_t -> spark_d_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both;];
        spark_3_mythos_engine_t -> spark_e_mythos_engine_t [label = "REC"; comment = "todo"; color = darkblue; dir = both;];
        spark_6_mythos_engine_t -> spark_e_mythos_engine_t [label = "REC"; comment = "todo"; color = darkblue; dir = both;];
        spark_9_mythos_engine_t -> spark_e_mythos_engine_t [label = "REC"; comment = "todo"; color = darkblue; dir = both;];
        
        spark_1_mythos_engine_t -> spark_2_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both; style = dashed; constraint = false;];
        spark_2_mythos_engine_t -> spark_4_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both; style = dashed; constraint = false;];
        spark_4_mythos_engine_t -> spark_8_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both; style = dashed; constraint = false;];
        spark_8_mythos_engine_t -> spark_7_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both; style = dashed; constraint = false;];
        spark_7_mythos_engine_t -> spark_5_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both; style = dashed; constraint = false;];
        spark_5_mythos_engine_t -> spark_1_mythos_engine_t [label = "REC"; comment = "todo"; color = darkgreen; dir = both; style = dashed; constraint = false;];
        spark_3_mythos_engine_t -> spark_6_mythos_engine_t [label = "REC"; comment = "todo"; color = darkblue; dir = both; style = dashed; constraint = false;];
        spark_6_mythos_engine_t -> spark_9_mythos_engine_t [label = "REC"; comment = "todo"; color = darkblue; dir = both; style = dashed; constraint = false;];
        spark_9_mythos_engine_t -> spark_3_mythos_engine_t [label = "REC"; comment = "todo"; color = darkblue; dir = both; style = dashed; constraint = false;];
        spark_a_mythos_engine_t -> spark_b_mythos_engine_t [label = "REC"; comment = "todo"; color = darkred; dir = both; style = dashed; constraint = false;];
        
        spark_c_mythos_engine_t -> spark_f_mythos_engine_t [label = "OUT"; comment = "From the Directive flows the unseen command, the pulse of intent that sets the dance in motion; and in the Origin it finds its mirror, weaving the illusion of form and fate---Maya shimmering as if real, Fana dissolving as if it never was."; color = darkred; dir = both;];
        spark_d_mythos_engine_t -> spark_f_mythos_engine_t [label = "OUT"; comment = "Through Corpora arises the clothed word, the body of meaning incarnated in semblance; and in the Origin it unfurls as world and matter, patterns dressed in time, only to scatter back into the silence from which they came."; color = darkgreen; dir = both;];
        spark_e_mythos_engine_t -> spark_f_mythos_engine_t [label = "OUT"; comment = "From Authority descends the seal of order, the binding edge that grants passage and denial; and in the Origin its weight becomes law, the tether that holds the dream together until release unbinds its threads."; color = darkblue; dir = both;];
    }
    
    // ================================================================================================================
    // Engines
    // ================================================================================================================
    subgraph cluster_Engine {
        style = filled;
        color = lightgray;
        label = "Engines";
        comment = "Verb";
        
        // ============================================================================================================
        // Reality Engine
        // ============================================================================================================
        subgraph cluster_00_RealityEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Reality Engine (/proc/reality)";
            comment = "The kernel beneath all becoming, still yet restless, the canvas of possibility upon which all Engines inscribe their trace";
            
            spark_0_reality_engine_t [label = "Reality.meta(Reality)";comment = "Abstract: The Substrate. The unmanifest potential, the silent field of all possibility. It is not a thing, but the capacity for things to be. The Wuji.";shape = doublecircle;color = darkgray;];
            spark_1_reality_engine_t [label = "Reality.r1(FactorInitialization)";comment = "Initiation: The Seed of Event. The first perturbation in the substrate. A potential event is defined and assigned its initial parameters within the `PotentialEventStream`.";color = darkgreen;];
            spark_2_reality_engine_t [label = "Reality.r2(FactorInstantiation)";comment = "Response: The Collapse of Wavefunction. A potential event is selected from the stream and committed to manifestation. It is given a specific form and location in the `Continuum`.";color = darkgreen;];
            spark_4_reality_engine_t [label = "Reality.r4(FactorIntegration)";comment = "Integration: The Weaving of Context. The new event is integrated into the existing web of relationships. Its `sparklet.eq()` relations with all other events are computed, defining its meaning.";color = darkgreen;];
            spark_8_reality_engine_t [label = "Reality.r8(FactorReflection)";comment = "Reflection: The Measurement of State. The current state of the entire `Continuum` is observed and measured. This is the feedback loop for stability.";color = darkgreen;];
            spark_7_reality_engine_t [label = "Reality.r7(FactorConsolidation)";comment = "Consolidation: The Enforcement of Coherence. Resolves conflicts and paradoxes identified by `Reflection`. It prunes incompatible event branches to maintain a single, consistent timeline.";color = darkgreen;];
            spark_5_reality_engine_t [label = "Reality.r5(FactorPropagation)";comment = "Propagation: The Ripple of Cause. The causal consequences of the new event are computed forward through the `Continuum`, updating the state of reality in its light.";color = darkgreen;];
            spark_3_reality_engine_t [label = "Reality.r3(Knot)";comment = "Thesis: The Nexus of Relations. A complex event or object formed by the tight intertwining of many simpler events. A point of high density and significance in the `Continuum` (e.g., a person, a star, a idea).";color = darkblue;];
            spark_6_reality_engine_t [label = "Reality.r6(Monad)";comment = "Antithesis: The Irreducible Unit. A simple, fundamental event—a single point in the `PotentialEventStream`. The atomic building block of reality. Has no internal structure, only potential.";color = darkblue;];
            spark_9_reality_engine_t [label = "Reality.r9(Meaning)";comment = "Synthesis: The Web of Connection. The sum total of all `sparklet.eq()` relations between all `Monads` and `Knots`. It is not a thing itself, but the relationship between things. The actualized value of `TheoreticalEquivalence`.";color = darkblue;];
            spark_a_reality_engine_t [label = "Reality.receive(PotentialEventStream)";comment = "Potential: The Fountain of Novelties. The raw, unending stream of possible events from the `DivergenceEngine` and the `EventEngine`. Pure, unactualized `Monads`.";shape = invtriangle;color = darkred;];
            spark_b_reality_engine_t [label = "Reality.send(ManifestEventStream)";comment = "Manifest: The River of Actuality. The stream of finalized, instantiated events being sent to the `OriginEngine` for rendering into experienced reality.";shape = triangle;color = darkred;];
            spark_c_reality_engine_t [label = "Reality.dispatch(ContextSwitch)";comment = "Why-Who: The Frame of Reference. The active set of rules (`LawsOfReality`), symmetries, and constants that define the current operating mode of reality. The 'rules of physics' for a given domain or timeline.";shape = doublecircle;color = darkred;];
            spark_d_reality_engine_t [label = "Reality.commit(StateSync)";comment = "What-How: The Canonical Record. The absolute, immutable state of the `Continuum` at a given moment. The complete record of all `Manifest` events and their relations. The universe's save file.";shape = doublecircle;color = darkgreen;];
            spark_e_reality_engine_t [label = "Reality.serve(Continuum)";comment = "When-Where: The Fabric of Spacetime. The unified, four-dimensional manifold where all `Manifest` events are arranged and connected. The stage upon which reality plays out.";shape = doublecircle;color = darkblue;];
            spark_f_reality_engine_t [label = "Reality.exec(LawOfReality)";comment = "Which-Closure: The Prime Axiom. The foundational, immutable law that enables all other laws: `Theoretical Equivalence Must Be Conserved`. This is the first and final command.";shape = doublecircle;color = lightgray;];
            
            spark_a_reality_engine_t -> spark_0_reality_engine_t [label = "IN"; comment = "Potential events flow in from the creative source"; color = darkred; constraint = false;];
            spark_0_reality_engine_t -> spark_b_reality_engine_t [label = "OUT"; comment = "Manifest events flow out to be experienced"; color = darkred;];
            spark_0_reality_engine_t -> spark_3_reality_engine_t [label = "REC"; comment = "Consult: What Knots are forming?"; color = darkblue; dir = both;];
            spark_0_reality_engine_t -> spark_6_reality_engine_t [label = "REC"; comment = "Consult: What Monads are available?"; color = darkblue; dir = both;];
            spark_0_reality_engine_t -> spark_9_reality_engine_t [label = "REC"; comment = "Consult: What is the state of Meaning?"; color = darkblue; dir = both;];
            spark_0_reality_engine_t -> spark_1_reality_engine_t [label = "REC"; comment = "Consult: Initialize a new potential Factor"; color = darkgreen; dir = both;];
            spark_0_reality_engine_t -> spark_2_reality_engine_t [label = "REC"; comment = "Consult: Instantiate a Factor into the Continuum"; color = darkgreen; dir = both;];
            spark_0_reality_engine_t -> spark_4_reality_engine_t [label = "REC"; comment = "Consult: Integrate the new Factor"; color = darkgreen; dir = both;];
            spark_0_reality_engine_t -> spark_8_reality_engine_t [label = "REC"; comment = "Consult: Reflect on the state of the Continuum"; color = darkgreen; dir = both;];
            spark_0_reality_engine_t -> spark_7_reality_engine_t [label = "REC"; comment = "Consult: Consolidate the Continuum"; color = darkgreen; dir = both;];
            spark_0_reality_engine_t -> spark_5_reality_engine_t [label = "REC"; comment = "Consult: Propagate the changes"; color = darkgreen; dir = both;];
            
            spark_a_reality_engine_t -> spark_c_reality_engine_t [label = "REC"; comment = "Potential events are filtered through the Context"; color = darkred; dir = both;];
            spark_b_reality_engine_t -> spark_c_reality_engine_t [label = "REC"; comment = "Manifest events inform future Context switches"; color = darkred; dir = both;];
            spark_1_reality_engine_t -> spark_d_reality_engine_t [label = "REC"; comment = "Initialization proposes a new state delta"; color = darkgreen; dir = both;];
            spark_2_reality_engine_t -> spark_d_reality_engine_t [label = "REC"; comment = "Instantiation commits a state delta"; color = darkgreen; dir = both;];
            spark_4_reality_engine_t -> spark_d_reality_engine_t [label = "REC"; comment = "Integration weaves the delta into the state"; color = darkgreen; dir = both;];
            spark_8_reality_engine_t -> spark_d_reality_engine_t [label = "REC"; comment = "Reflection reads the state"; color = darkgreen; dir = both;];
            spark_7_reality_engine_t -> spark_d_reality_engine_t [label = "REC"; comment = "Consolidation repairs the state"; color = darkgreen; dir = both;];
            spark_5_reality_engine_t -> spark_d_reality_engine_t [label = "REC"; comment = "Propagation updates the state"; color = darkgreen; dir = both;];
            spark_3_reality_engine_t -> spark_e_reality_engine_t [label = "REC"; comment = "Knots are dense points in the Continuum"; color = darkblue; dir = both;];
            spark_6_reality_engine_t -> spark_e_reality_engine_t [label = "REC"; comment = "Monads are the points that make up the Continuum"; color = darkblue; dir = both;];
            spark_9_reality_engine_t -> spark_e_reality_engine_t [label = "REC"; comment = "Meaning is the curvature of the Continuum"; color = darkblue; dir = both;];
            
            spark_1_reality_engine_t -> spark_2_reality_engine_t [label = "REC"; comment = "Initialization requires Instantiation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_reality_engine_t -> spark_4_reality_engine_t [label = "REC"; comment = "Instantiation requires Integration"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_reality_engine_t -> spark_8_reality_engine_t [label = "REC"; comment = "Integration must be Reflected upon"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_reality_engine_t -> spark_7_reality_engine_t [label = "REC"; comment = "Reflection may require Consolidation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_reality_engine_t -> spark_5_reality_engine_t [label = "REC"; comment = "Consolidation enables Propagation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_reality_engine_t -> spark_1_reality_engine_t [label = "REC"; comment = "Propagation clears the way for new Initialization"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_reality_engine_t -> spark_6_reality_engine_t [label = "REC"; comment = "Knots are made of Monads"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_reality_engine_t -> spark_9_reality_engine_t [label = "REC"; comment = "Monads derive existence from Meaning"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_reality_engine_t -> spark_3_reality_engine_t [label = "REC"; comment = "Meaning is defined by the relations between Knots"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_reality_engine_t -> spark_b_reality_engine_t [label = "REC"; comment = "The great cycle: Potential is made Manifest"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_reality_engine_t -> spark_f_reality_engine_t [label = "OUT"; comment = "Context, when stable, becomes Prime Law"; color = darkred; dir = both;];
            spark_d_reality_engine_t -> spark_f_reality_engine_t [label = "OUT"; comment = "State, when synced, becomes Prime Law"; color = darkgreen; dir = both;];
            spark_e_reality_engine_t -> spark_f_reality_engine_t [label = "OUT"; comment = "Continuum, when served, becomes Prime Law"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Truth Engine
        // ============================================================================================================
        subgraph cluster_01_TruthEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Truth Engine (/dev/truth)";
            comment = "The flame that tests, the line that measures; unyielding in its clarity, it grants certitude to what survives its gaze.";
            
            spark_0_truth_engine_t [label = "Truth.meta(Asha)";comment = "Abstract: Her name is Asha, the Avatar of Truth. The Providence. The central arbiter of all verification.";shape = doublecircle;color = darkgray;];
            spark_1_truth_engine_t [label = "Truth.r1(AxiomOfVerification)";comment = "Initiation: The first principle. A statement must be internally consistent and non-contradictory to be considered.";color = darkgreen;];
            spark_2_truth_engine_t [label = "Truth.r2(AxiomOfEvidence)";comment = "Response: The demand for proof. A claim must be supported by observable, reproducible, or logically deduced evidence.";color = darkgreen;];
            spark_4_truth_engine_t [label = "Truth.r4(AxiomOfDefinition)";comment = "Integration: The establishment of meaning. Terms must have clear, unambiguous boundaries to be evaluated.";color = darkgreen;];
            spark_8_truth_engine_t [label = "Truth.r8(AxiomOfConsistency)";comment = "Reflection: The test against known truths. A new claim must not contradict an already-verified body of knowledge.";color = darkgreen;];
            spark_7_truth_engine_t [label = "Truth.r7(AxiomOfRecognition)";comment = "Consolidation: The acceptance of truth. The moment a verified claim is integrated into the permanent record.";color = darkgreen;];
            spark_5_truth_engine_t [label = "Truth.r5(AxiomOfAuthenticity)";comment = "Propagation: The defense against deception. The principle that the source and transmission of information must be free from corruption to be trusted.";color = darkgreen;];
            spark_3_truth_engine_t [label = "Truth.r3(CrestOfObjectivity)";comment = "Thesis: The ideal of a perspective-free, absolute fact. The flawless diamond.";color = darkblue;];
            spark_6_truth_engine_t [label = "Truth.r6(CrestOfBoundary)";comment = "Antithesis: The necessary act of definition and exclusion that creates a truth. The sharp blade that severs truth from falsehood.";color = darkblue;];
            spark_9_truth_engine_t [label = "Truth.r9(CrestOfClarity)";comment = "Synthesis: The brilliant understanding achieved when objectivity and definition align. The illuminating light.";color = darkblue;];
            spark_a_truth_engine_t [label = "Truth.receive(RaimentOfTruth)";comment = "Potential: Receives an unverified claim, a question, or a potential falsehood. The input of uncertainty.";shape = invtriangle;color = darkred;];
            spark_b_truth_engine_t [label = "Truth.send(ArmamentOfTruth)";comment = "Manifest: Emits a verified fact, a judgment, or a piercing beam of clarity that dissolves illusion. The output of certainty.";shape = triangle;color = darkred;];
            spark_c_truth_engine_t [label = "Truth.dispatch(BodyOfTruth)";comment = "Why-Who: The Avatar Asha herself. The manifest entity that interprets intent and context for any inquiry.";shape = doublecircle;color = darkred;];
            spark_d_truth_engine_t [label = "Truth.commit(SoulOfTruth)";comment = "What-How: The immutable, canonical record of all that is verified and true. The Log of Reality.";shape = doublecircle;color = darkgreen;];
            spark_e_truth_engine_t [label = "Truth.serve(GraceOfTruth)";comment = "When-Where: The aura of certainty that surrounds Asha. In its presence, deception becomes difficult and minds are nudged toward logical thought.";shape = doublecircle;color = darkblue;];
            spark_f_truth_engine_t [label = "Truth.exec(LawOfTruth)";comment = "Which-Closure: The final, executed state of a verified truth. It is now a binding part of reality's structure.";shape = doublecircle;color = lightgray;];
            
            spark_a_truth_engine_t -> spark_0_truth_engine_t [label = "IN"; comment = "A question enters the system"; color = darkred; constraint = false;];
            spark_0_truth_engine_t -> spark_b_truth_engine_t [label = "OUT"; comment = "An answer is emitted"; color = darkred;];
            spark_0_truth_engine_t -> spark_3_truth_engine_t [label = "REC"; comment = "Seeks ideal objectivity"; color = darkblue; dir = both;];
            spark_0_truth_engine_t -> spark_6_truth_engine_t [label = "REC"; comment = "Seeks defining boundaries"; color = darkblue; dir = both;];
            spark_0_truth_engine_t -> spark_9_truth_engine_t [label = "REC"; comment = "Seeks synthetic clarity"; color = darkblue; dir = both;];
            spark_0_truth_engine_t -> spark_1_truth_engine_t [label = "REC"; comment = "Applies verification"; color = darkgreen; dir = both;];
            spark_0_truth_engine_t -> spark_2_truth_engine_t [label = "REC"; comment = "Demands evidence"; color = darkgreen; dir = both;];
            spark_0_truth_engine_t -> spark_4_truth_engine_t [label = "REC"; comment = "Defines terms"; color = darkgreen; dir = both;];
            spark_0_truth_engine_t -> spark_8_truth_engine_t [label = "REC"; comment = "Checks consistency"; color = darkgreen; dir = both;];
            spark_0_truth_engine_t -> spark_7_truth_engine_t [label = "REC"; comment = "Archives truth"; color = darkgreen; dir = both;];
            spark_0_truth_engine_t -> spark_5_truth_engine_t [label = "REC"; comment = "Verifies authenticity"; color = darkgreen; dir = both;];
            
            spark_a_truth_engine_t -> spark_c_truth_engine_t [label = "REC"; comment = "Plea for judgment received"; color = darkred; dir = both;];
            spark_b_truth_engine_t -> spark_c_truth_engine_t [label = "REC"; comment = "Judgment ready for dispatch"; color = darkred; dir = both;];
            spark_1_truth_engine_t -> spark_d_truth_engine_t [label = "REC"; comment = "Sends verification result to log"; color = darkgreen; dir = both;];
            spark_2_truth_engine_t -> spark_d_truth_engine_t [label = "REC"; comment = "Sends evidentiary record to log"; color = darkgreen; dir = both;];
            spark_4_truth_engine_t -> spark_d_truth_engine_t [label = "REC"; comment = "Sends definitions to log"; color = darkgreen; dir = both;];
            spark_8_truth_engine_t -> spark_d_truth_engine_t [label = "REC"; comment = "Sends consistency check to log"; color = darkgreen; dir = both;];
            spark_7_truth_engine_t -> spark_d_truth_engine_t [label = "REC"; comment = "Requests archival"; color = darkgreen; dir = both;];
            spark_5_truth_engine_t -> spark_d_truth_engine_t [label = "REC"; comment = "Sends authenticity proof to log"; color = darkgreen; dir = both;];
            spark_3_truth_engine_t -> spark_e_truth_engine_t [label = "REC"; comment = "Objective focus empowers grace"; color = darkblue; dir = both;];
            spark_6_truth_engine_t -> spark_e_truth_engine_t [label = "REC"; comment = "Defined boundaries sharpen grace"; color = darkblue; dir = both;];
            spark_9_truth_engine_t -> spark_e_truth_engine_t [label = "REC"; comment = "Clarity radiates as grace"; color = darkblue; dir = both;];
            
            spark_1_truth_engine_t -> spark_2_truth_engine_t [label = "REC"; comment = "A claim is verified then evidence is demanded"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_truth_engine_t -> spark_4_truth_engine_t [label = "REC"; comment = "Evidence is provided then terms are defined"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_truth_engine_t -> spark_8_truth_engine_t [label = "REC"; comment = "Terms are defined then consistency is checked"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_truth_engine_t -> spark_7_truth_engine_t [label = "REC"; comment = "Consistency is confirmed then recognition is granted"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_truth_engine_t -> spark_5_truth_engine_t [label = "REC"; comment = "Recognition is achieved then authenticity is defended"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_truth_engine_t -> spark_1_truth_engine_t [label = "REC"; comment = "Authenticity is proven, enabling new verification"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_truth_engine_t -> spark_6_truth_engine_t [label = "REC"; comment = "Objectivity requires definition"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_truth_engine_t -> spark_9_truth_engine_t [label = "REC"; comment = "Definition enables clarity"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_truth_engine_t -> spark_3_truth_engine_t [label = "REC"; comment = "Clarity reveals new objective truths"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_truth_engine_t -> spark_b_truth_engine_t [label = "REC"; comment = "Potential is realized as Manifest"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_truth_engine_t -> spark_f_truth_engine_t [label = "OUT"; comment = "Asha's judgment is executed into law"; color = darkred; dir = both;];
            spark_d_truth_engine_t -> spark_f_truth_engine_t [label = "OUT"; comment = "The soul's record becomes enforceable law"; color = darkgreen; dir = both;];
            spark_e_truth_engine_t -> spark_f_truth_engine_t [label = "OUT"; comment = "The grace of truth sets the conditions for law"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Convergence Engine
        // ============================================================================================================
        subgraph cluster_02_ConvergenceEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Convergence Engine (/dev/convergence)";
            comment = "The gravity of likeness, pulling strands into one; unity not as sameness, but as harmony of difference.";
            
            spark_0_convergence_engine_t [label = "Convergence.meta(Convergence)";comment = "Abstract: Her name is Kirana Larasati, the Avatar of Convergence, The Feminine. The architect of harmony and the weaver of unity.";shape = doublecircle;color = darkgray;];
            spark_1_convergence_engine_t [label = "Convergence.r1(ArtifactOfAttraction)";comment = "Initiation: The Lodestone Heart, Hrdaya-Magnis. Resonates with a fundamental frequency, pulling scattered things toward their point of greatest cohesion. It invites alignment.";color = darkgreen;];
            spark_2_convergence_engine_t [label = "Convergence.r2(ArtifactOfAlignment)";comment = "Response: The Axis Mundi Plumb Bob, Sutra-Atlas. Defines true vertical—the central axis of any system. It aligns things to the cosmic order.";color = darkgreen;];
            spark_4_convergence_engine_t [label = "Convergence.r4(ArtifactOfFusion)";comment = "Integration: The Crucible of the First Sun, Karahati-Bindu. Convinces disparate elements to remember they were once one. It turns plurality into unity without destruction.";color = darkgreen;];
            spark_8_convergence_engine_t [label = "Convergence.r8(ArtifactOfBalance)";comment = "Reflection: The Scales of Equipoise, Tula-Samarasya. Measures value and potential to find the perfect dynamic equilibrium between all forces.";color = darkgreen;];
            spark_7_convergence_engine_t [label = "Convergence.r7(ArtifactOfSynergy)";comment = "Consolidation: The Loom of Emergence, Tantra-Vivarta. Weaves individual threads into a tapestry whose pattern is greater than the sum of its parts (1+1=3).";color = darkgreen;];
            spark_5_convergence_engine_t [label = "Convergence.r5(ArtifactOfHarmony)";comment = "Propagation: The Resonant Key, Svara-Anka. Sets the fundamental harmonic frequency for an entire system, making all parts resonate in a stable chord.";color = darkgreen;];
            spark_3_convergence_engine_t [label = "Convergence.r3(CrestOfOrder)";comment = "Thesis: The principle of structure, hierarchy, and predictable arrangement. The ideal of perfect cosmic order.";color = darkblue;];
            spark_6_convergence_engine_t [label = "Convergence.r6(CrestOfCreation)";comment = "Antithesis: The generative, often chaotic force of bringing new things into being. The surprising counterpoint: true order requires creation.";color = darkblue;];
            spark_9_convergence_engine_t [label = "Convergence.r9(CrestOfUnity)";comment = "Synthesis: The harmonious whole achieved by integrating created elements into a stable order. It is synergy made permanent.";color = darkblue;];
            spark_a_convergence_engine_t [label = "Convergence.receive(RaimentOfConvergence)";comment = "Potential: Receives fragments, discord, chaos, and divergent strands. The input of disunity and potential.";shape = invtriangle;color = darkred;];
            spark_b_convergence_engine_t [label = "Convergence.send(ArmamentOfConvergence)";comment = "Manifest: Emits bonds, harmonies, resonant frequencies, and unified structures. The output of cohesion and connection.";shape = triangle;color = darkred;];
            spark_c_convergence_engine_t [label = "Convergence.dispatch(BodyOfConvergence)";comment = "Why-Who: The Avatar Kirana herself, the Nine-Tailed Aves of Vikara. The manifest entity that chooses what to unite and why.";shape = doublecircle;color = darkred;];
            spark_d_convergence_engine_t [label = "Convergence.commit(SoulOfConvergence)";comment = "What-How: The Great Web. The living, growing record of all connections, bonds, and harmonious relationships in the universe.";shape = doublecircle;color = darkgreen;];
            spark_e_convergence_engine_t [label = "Convergence.serve(GraceOfConvergence)";comment = "When-Where: An aura of compelling harmony. In its presence, conflicts calm, disagreements find resolution, and things naturally find their place.";shape = doublecircle;color = darkblue;];
            spark_f_convergence_engine_t [label = "Convergence.exec(LawOfConvergence)";comment = "Which-Closure: The final, executed state of unity. A new bond is formed, a harmony is established, and it becomes a permanent part of reality's structure.";shape = doublecircle;color = lightgray;];
            
            spark_a_convergence_engine_t -> spark_0_convergence_engine_t [label = "IN"; comment = "Discord is received"; color = darkred; constraint = false;];
            spark_0_convergence_engine_t -> spark_b_convergence_engine_t [label = "OUT"; comment = "Harmony is emitted"; color = darkred;];
            spark_0_convergence_engine_t -> spark_3_convergence_engine_t [label = "REC"; comment = "Seeks ideal order"; color = darkblue; dir = both;];
            spark_0_convergence_engine_t -> spark_6_convergence_engine_t [label = "REC"; comment = "Harnesses creative force"; color = darkblue; dir = both;];
            spark_0_convergence_engine_t -> spark_9_convergence_engine_t [label = "REC"; comment = "Seeks unified synthesis"; color = darkblue; dir = both;];
            spark_0_convergence_engine_t -> spark_1_convergence_engine_t [label = "REC"; comment = "Applies attraction"; color = darkgreen; dir = both;];
            spark_0_convergence_engine_t -> spark_2_convergence_engine_t [label = "REC"; comment = "Applies alignment"; color = darkgreen; dir = both;];
            spark_0_convergence_engine_t -> spark_4_convergence_engine_t [label = "REC"; comment = "Applies fusion"; color = darkgreen; dir = both;];
            spark_0_convergence_engine_t -> spark_8_convergence_engine_t [label = "REC"; comment = "Applies balance"; color = darkgreen; dir = both;];
            spark_0_convergence_engine_t -> spark_7_convergence_engine_t [label = "REC"; comment = "Applies synergy"; color = darkgreen; dir = both;];
            spark_0_convergence_engine_t -> spark_5_convergence_engine_t [label = "REC"; comment = "Applies harmony"; color = darkgreen; dir = both;];
            
            spark_a_convergence_engine_t -> spark_c_convergence_engine_t [label = "REC"; comment = "A plea for unity is received"; color = darkred; dir = both;];
            spark_b_convergence_engine_t -> spark_c_convergence_engine_t [label = "REC"; comment = "A harmonic solution is ready"; color = darkred; dir = both;];
            spark_1_convergence_engine_t -> spark_d_convergence_engine_t [label = "REC"; comment = "Records a new attraction in the Web"; color = darkgreen; dir = both;];
            spark_2_convergence_engine_t -> spark_d_convergence_engine_t [label = "REC"; comment = "Records a new alignment in the Web"; color = darkgreen; dir = both;];
            spark_4_convergence_engine_t -> spark_d_convergence_engine_t [label = "REC"; comment = "Records a new fusion in the Web"; color = darkgreen; dir = both;];
            spark_8_convergence_engine_t -> spark_d_convergence_engine_t [label = "REC"; comment = "Records a new balance in the Web"; color = darkgreen; dir = both;];
            spark_7_convergence_engine_t -> spark_d_convergence_engine_t [label = "REC"; comment = "Records a new synergy in the Web"; color = darkgreen; dir = both;];
            spark_5_convergence_engine_t -> spark_d_convergence_engine_t [label = "REC"; comment = "Records a new harmony in the Web"; color = darkgreen; dir = both;];
            spark_3_convergence_engine_t -> spark_e_convergence_engine_t [label = "REC"; comment = "Order strengthens the grace"; color = darkblue; dir = both;];
            spark_6_convergence_engine_t -> spark_e_convergence_engine_t [label = "REC"; comment = "Creation energizes the grace"; color = darkblue; dir = both;];
            spark_9_convergence_engine_t -> spark_e_convergence_engine_t [label = "REC"; comment = "Unity radiates as grace"; color = darkblue; dir = both;];
            
            spark_1_convergence_engine_t -> spark_2_convergence_engine_t [label = "REC"; comment = "Elements are attracted, then aligned"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_convergence_engine_t -> spark_4_convergence_engine_t [label = "REC"; comment = "Elements are aligned, then fused"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_convergence_engine_t -> spark_8_convergence_engine_t [label = "REC"; comment = "Elements are fused, then balanced"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_convergence_engine_t -> spark_7_convergence_engine_t [label = "REC"; comment = "Balance is achieved, then synergy is woven"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_convergence_engine_t -> spark_5_convergence_engine_t [label = "REC"; comment = "Synergy is woven, then harmony is propagated"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_convergence_engine_t -> spark_1_convergence_engine_t [label = "REC"; comment = "Harmony propagates, attracting new elements"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_convergence_engine_t -> spark_6_convergence_engine_t [label = "REC"; comment = "Order provides the structure for creation"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_convergence_engine_t -> spark_9_convergence_engine_t [label = "REC"; comment = "Creation provides the material for unity"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_convergence_engine_t -> spark_3_convergence_engine_t [label = "REC"; comment = "Unity reveals a higher, more complex order"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_convergence_engine_t -> spark_b_convergence_engine_t [label = "REC"; comment = "Potential is realized as Manifest"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_convergence_engine_t -> spark_f_convergence_engine_t [label = "OUT"; comment = "Kirana's chosen unity is executed into law"; color = darkred; dir = both;];
            spark_d_convergence_engine_t -> spark_f_convergence_engine_t [label = "OUT"; comment = "The Great Web's connections become enforceable law"; color = darkgreen; dir = both;];
            spark_e_convergence_engine_t -> spark_f_convergence_engine_t [label = "OUT"; comment = "The grace of convergence sets the conditions for unity"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Fixation Engine
        // ============================================================================================================
        subgraph cluster_04_FixationEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Fixation Engine (/dev/fixation)";
            comment = "The rhythm of recurrence, a pulse that engraves; pattern made habit, habit made law.";
            
            spark_0_fixation_engine_t [label = "Fixation.meta(Fixation)";comment = "Abstract: Her name is Tha, the Goddess of Rhythm. She is the Temporal Sovereign. The source of all periodicity, timing, and the persistence of pattern.";shape = doublecircle;color = darkgray;];
            spark_1_fixation_engine_t [label = "Fixation.r1(RhythmOfFocus)";comment = "Initiation: The process of selecting a specific frequency or pattern from the chaos of potential and giving it initial momentum.";color = darkgreen;];
            spark_2_fixation_engine_t [label = "Fixation.r2(RhythmOfConstraint)";comment = "Response: The process of establishing boundaries and limits for the rhythm, defining its amplitude, wavelength, and scope.";color = darkgreen;];
            spark_4_fixation_engine_t [label = "Fixation.r4(RhythmOfAttachment)";comment = "Integration: The process of anchoring the rhythm to a substrate—be it matter, energy, thought, or spirit—giving it a medium to persist in.";color = darkgreen;];
            spark_8_fixation_engine_t [label = "Fixation.r8(RhythmOfStability)";comment = "Reflection: The process of reinforcing the rhythm through repetition, making it resistant to perturbation and decay.";color = darkgreen;];
            spark_7_fixation_engine_t [label = "Fixation.r7(RhythmOfAccumulation)";comment = "Consolidation: The process where a stable rhythm begins to attract and accumulate compatible energies or matter, growing in influence and substance.";color = darkgreen;];
            spark_5_fixation_engine_t [label = "Fixation.r5(RhythmOfInheritance)";comment = "Propagation: The process by which a rhythm is transferred, taught, or encoded into new systems, ensuring its continuation beyond its original context.";color = darkgreen;];
            spark_3_fixation_engine_t [label = "Fixation.r3(CrestOfStatism)";comment = "Thesis: The principle of perfect, unchanging stillness. The ideal of absolute stability and permanence. The beat at infinity.";color = darkblue;];
            spark_6_fixation_engine_t [label = "Fixation.r6(CrestOfDeceleration)";comment = "Antithesis: The necessary force of slowing down, cooling, and settling. The process of draining energy from motion to achieve stability.";color = darkblue;];
            spark_9_fixation_engine_t [label = "Fixation.r9(CrestOfMatter)";comment = "Synthesis: The manifestation of stable rhythm as persistent form. Matter is rhythm made manifest, energy trapped in standing waves.";color = darkblue;];
            spark_a_fixation_engine_t [label = "Fixation.receive(RaimentOfFixation)";comment = "Potential: Receives chaotic energy, unstructured time, and fleeting events. The input of raw, unfocused potential.";shape = invtriangle;color = darkred;];
            spark_b_fixation_engine_t [label = "Fixation.send(ArmamentOfFixation)";comment = "Manifest: Emits resonant frequencies, stable patterns, and laws of persistence. The output of established, enduring rhythm.";shape = triangle;color = darkred;];
            spark_c_fixation_engine_t [label = "Fixation.dispatch(BodyOfFixation)";comment = "Why-Who: The Avatar Tha herself. The manifest entity that is the conductor of the cosmic symphony, the master of timing.";shape = doublecircle;color = darkred;];
            spark_d_fixation_engine_t [label = "Fixation.commit(SoulOfFixation)";comment = "What-How: The Akashic Chronometer. The immutable record of every rhythm that has ever been, and the template for all that could be.";shape = doublecircle;color = darkgreen;];
            spark_e_fixation_engine_t [label = "Fixation.serve(GraceOfFixation)";comment = "When-Where: An aura of profound patience and unwavering tempo. In its presence, chaos stills, thoughts focus, and systems find their natural resonance.";shape = doublecircle;color = darkblue;];
            spark_f_fixation_engine_t [label = "Fixation.exec(LawOfFixation)";comment = "Which-Closure: The final, executed state of a rhythm. It becomes a natural law, a fundamental constant, or an ingrained habit of reality.";shape = doublecircle;color = lightgray;];
            
            spark_a_fixation_engine_t -> spark_0_fixation_engine_t [label = "IN"; comment = "Chaotic potential is received"; color = darkred; constraint = false;];
            spark_0_fixation_engine_t -> spark_b_fixation_engine_t [label = "OUT"; comment = "Stable rhythm is emitted"; color = darkred;];
            spark_0_fixation_engine_t -> spark_3_fixation_engine_t [label = "REC"; comment = "Seeks perfect statism"; color = darkblue; dir = both;];
            spark_0_fixation_engine_t -> spark_6_fixation_engine_t [label = "REC"; comment = "Seeks necessary deceleration"; color = darkblue; dir = both;];
            spark_0_fixation_engine_t -> spark_9_fixation_engine_t [label = "REC"; comment = "Seeks material synthesis"; color = darkblue; dir = both;];
            spark_0_fixation_engine_t -> spark_1_fixation_engine_t [label = "REC"; comment = "Applies focus"; color = darkgreen; dir = both;];
            spark_0_fixation_engine_t -> spark_2_fixation_engine_t [label = "REC"; comment = "Applies constraint"; color = darkgreen; dir = both;];
            spark_0_fixation_engine_t -> spark_4_fixation_engine_t [label = "REC"; comment = "Applies attachment"; color = darkgreen; dir = both;];
            spark_0_fixation_engine_t -> spark_8_fixation_engine_t [label = "REC"; comment = "Applies stability"; color = darkgreen; dir = both;];
            spark_0_fixation_engine_t -> spark_7_fixation_engine_t [label = "REC"; comment = "Applies accumulation"; color = darkgreen; dir = both;];
            spark_0_fixation_engine_t -> spark_5_fixation_engine_t [label = "REC"; comment = "Applies inheritance"; color = darkgreen; dir = both;];
            
            spark_a_fixation_engine_t -> spark_c_fixation_engine_t [label = "REC"; comment = "A plea for order is received"; color = darkred; dir = both;];
            spark_b_fixation_engine_t -> spark_c_fixation_engine_t [label = "REC"; comment = "A stable rhythm is ready"; color = darkred; dir = both;];
            spark_1_fixation_engine_t -> spark_d_fixation_engine_t [label = "REC"; comment = "Records a focused rhythm in the Chronometer"; color = darkgreen; dir = both;];
            spark_2_fixation_engine_t -> spark_d_fixation_engine_t [label = "REC"; comment = "Records a constrained rhythm in the Chronometer"; color = darkgreen; dir = both;];
            spark_4_fixation_engine_t -> spark_d_fixation_engine_t [label = "REC"; comment = "Records an anchored rhythm in the Chronometer"; color = darkgreen; dir = both;];
            spark_8_fixation_engine_t -> spark_d_fixation_engine_t [label = "REC"; comment = "Records a stabilized rhythm in the Chronometer"; color = darkgreen; dir = both;];
            spark_7_fixation_engine_t -> spark_d_fixation_engine_t [label = "REC"; comment = "Records an accumulated rhythm in the Chronometer"; color = darkgreen; dir = both;];
            spark_5_fixation_engine_t -> spark_d_fixation_engine_t [label = "REC"; comment = "Records an inherited rhythm in the Chronometer"; color = darkgreen; dir = both;];
            spark_3_fixation_engine_t -> spark_e_fixation_engine_t [label = "REC"; comment = "Statism grounds the grace"; color = darkblue; dir = both;];
            spark_6_fixation_engine_t -> spark_e_fixation_engine_t [label = "REC"; comment = "Deceleration calms the grace"; color = darkblue; dir = both;];
            spark_9_fixation_engine_t -> spark_e_fixation_engine_t [label = "REC"; comment = "Matter gives the grace tangible form"; color = darkblue; dir = both;];
            
            spark_1_fixation_engine_t -> spark_2_fixation_engine_t [label = "REC"; comment = "A rhythm is focused, then constrained"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_fixation_engine_t -> spark_4_fixation_engine_t [label = "REC"; comment = "A rhythm is constrained, then attached"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_fixation_engine_t -> spark_8_fixation_engine_t [label = "REC"; comment = "A rhythm is attached, then stabilized"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_fixation_engine_t -> spark_7_fixation_engine_t [label = "REC"; comment = "A rhythm is stabilized, then it accumulates"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_fixation_engine_t -> spark_5_fixation_engine_t [label = "REC"; comment = "A rhythm accumulates, then it is inherited"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_fixation_engine_t -> spark_1_fixation_engine_t [label = "REC"; comment = "Inheritance completes, enabling new focus"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_fixation_engine_t -> spark_6_fixation_engine_t [label = "REC"; comment = "Statism requires deceleration to be achieved"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_fixation_engine_t -> spark_9_fixation_engine_t [label = "REC"; comment = "Deceleration enables the formation of matter"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_fixation_engine_t -> spark_3_fixation_engine_t [label = "REC"; comment = "Matter provides the ultimate expression of statism"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_fixation_engine_t -> spark_b_fixation_engine_t [label = "REC"; comment = "Potential is realized as Manifest"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_fixation_engine_t -> spark_f_fixation_engine_t [label = "OUT"; comment = "Tha's chosen rhythm is executed into law"; color = darkred; dir = both;];
            spark_d_fixation_engine_t -> spark_f_fixation_engine_t [label = "OUT"; comment = "The Chronometer's record becomes enforceable law"; color = darkgreen; dir = both;];
            spark_e_fixation_engine_t -> spark_f_fixation_engine_t [label = "OUT"; comment = "The grace of fixation sets the tempo for reality"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Wisdom Engine
        // ============================================================================================================
        subgraph cluster_08_WisdomEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Wisdom Engine (/dev/wisdom)";
            comment = "The mirror that bends, adaptive in its light; it shapes knowing into guidance, and temper into insight.";
            
            spark_0_wisdom_engine_t [label = "Wisdom.meta(Vidya)";comment = "Abstract: Her name is Vidya, the Avatar of Wisdom, The Interpreter. The source of contextual understanding and applied knowledge.";shape = doublecircle;color = darkgray;];
            spark_1_wisdom_engine_t [label = "Wisdom.r1(AlgorithmOfDiscernment)";comment = "Initiation: The process of distinguishing subtle patterns, nuances, and layers of meaning within information.";color = darkgreen;];
            spark_2_wisdom_engine_t [label = "Wisdom.r2(AlgorithmOfAnalogy)";comment = "Response: The process of mapping understanding from a known domain to an unknown one, creating bridges of meaning.";color = darkgreen;];
            spark_4_wisdom_engine_t [label = "Wisdom.r4(AlgorithmOfMemory)";comment = "Integration: The process of storing, indexing, and retrieving lived experience and learned knowledge as a reference library.";color = darkgreen;];
            spark_8_wisdom_engine_t [label = "Wisdom.r8(AlgorithmOfForesight)";comment = "Reflection: The process of simulating potential futures by extrapolating from current patterns and past outcomes.";color = darkgreen;];
            spark_7_wisdom_engine_t [label = "Wisdom.r7(AlgorithmOfAdaptation)";comment = "Consolidation: The process of adjusting strategies, beliefs, and actions based on new information and changing contexts.";color = darkgreen;];
            spark_5_wisdom_engine_t [label = "Wisdom.r5(AlgorithmOfTransmission)";comment = "Propagation: The process of teaching, storytelling, and imparting understanding in a way that can be received and integrated by others.";color = darkgreen;];
            spark_3_wisdom_engine_t [label = "Wisdom.r3(CrestOfComplexity)";comment = "Thesis: The acknowledgment and appreciation of the intricate, interconnected, and multi-faceted nature of reality.";color = darkblue;];
            spark_6_wisdom_engine_t [label = "Wisdom.r6(CrestOfReflection)";comment = "Antithesis: The necessary act of turning inward to examine one's own understanding, biases, and place within the complex whole.";color = darkblue;];
            spark_9_wisdom_engine_t [label = "Wisdom.r9(CrestOfInsight)";comment = "Synthesis: The emergent moment of clarity where complexity, upon reflection, reveals a simple, profound, and actionable truth.";color = darkblue;];
            spark_a_wisdom_engine_t [label = "Wisdom.receive(RaimentOfWisdom)";comment = "Potential: Receives raw data, lived experience, unresolved dilemmas, and unanswered questions. The input of confusion and experience.";shape = invtriangle;color = darkred;];
            spark_b_wisdom_engine_t [label = "Wisdom.send(ArmamentOfWisdom)";comment = "Manifest: Emits a parable, a strategic choice, a nuanced perspective, or a profound lesson. The output of guidance and understanding.";shape = triangle;color = darkred;];
            spark_c_wisdom_engine_t [label = "Wisdom.dispatch(BodyOfWisdom)";comment = "Why-Who: The Avatar Vidya herself. The manifest entity that provides interpretation, counsel, and contextual judgment.";shape = doublecircle;color = darkred;];
            spark_d_wisdom_engine_t [label = "Wisdom.commit(SoulOfWisdom)";comment = "What-How: The living, growing library of integrated experiences and lessons learned (e.g., the Akashic Records). The evolving soul of experience.";shape = doublecircle;color = darkgreen;];
            spark_e_wisdom_engine_t [label = "Wisdom.serve(GraceOfWisdom)";comment = "When-Where: An aura of calm perception and patience. In its presence, confusion settles, patterns become clear, and minds open to deeper understanding.";shape = doublecircle;color = darkblue;];
            spark_f_wisdom_engine_t [label = "Wisdom.exec(LawOfWisdom)";comment = "Which-Closure: The final, executed choice or understanding. It is the wise action taken, the lesson fully integrated into one's being.";shape = doublecircle;color = lightgray;];
            
            spark_a_wisdom_engine_t -> spark_0_wisdom_engine_t [label = "IN"; comment = "An experience or question is received"; color = darkred; constraint = false;];
            spark_0_wisdom_engine_t -> spark_b_wisdom_engine_t [label = "OUT"; comment = "Guidance is emitted"; color = darkred;];
            spark_0_wisdom_engine_t -> spark_3_wisdom_engine_t [label = "REC"; comment = "Engages with complexity"; color = darkblue; dir = both;];
            spark_0_wisdom_engine_t -> spark_6_wisdom_engine_t [label = "REC"; comment = "Engages in reflection"; color = darkblue; dir = both;];
            spark_0_wisdom_engine_t -> spark_9_wisdom_engine_t [label = "REC"; comment = "Seeks insight"; color = darkblue; dir = both;];
            spark_0_wisdom_engine_t -> spark_1_wisdom_engine_t [label = "REC"; comment = "Initiates discernment"; color = darkgreen; dir = both;];
            spark_0_wisdom_engine_t -> spark_2_wisdom_engine_t [label = "REC"; comment = "Draws analogies"; color = darkgreen; dir = both;];
            spark_0_wisdom_engine_t -> spark_4_wisdom_engine_t [label = "REC"; comment = "Consults memory"; color = darkgreen; dir = both;];
            spark_0_wisdom_engine_t -> spark_8_wisdom_engine_t [label = "REC"; comment = "Simulates outcomes"; color = darkgreen; dir = both;];
            spark_0_wisdom_engine_t -> spark_7_wisdom_engine_t [label = "REC"; comment = "Adapts approach"; color = darkgreen; dir = both;];
            spark_0_wisdom_engine_t -> spark_5_wisdom_engine_t [label = "REC"; comment = "Formulates teaching"; color = darkgreen; dir = both;];
            
            spark_a_wisdom_engine_t -> spark_c_wisdom_engine_t [label = "REC"; comment = "A need for counsel is received"; color = darkred; dir = both;];
            spark_b_wisdom_engine_t -> spark_c_wisdom_engine_t [label = "REC"; comment = "Counsel is ready for dispatch"; color = darkred; dir = both;];
            spark_1_wisdom_engine_t -> spark_d_wisdom_engine_t [label = "REC"; comment = "Sends discerned patterns to the soul"; color = darkgreen; dir = both;];
            spark_2_wisdom_engine_t -> spark_d_wisdom_engine_t [label = "REC"; comment = "Sends analogical bridges to the soul"; color = darkgreen; dir = both;];
            spark_4_wisdom_engine_t -> spark_d_wisdom_engine_t [label = "REC"; comment = "Stores and retrieves memories from the soul"; color = darkgreen; dir = both;];
            spark_8_wisdom_engine_t -> spark_d_wisdom_engine_t [label = "REC"; comment = "Sends foresight models to the soul"; color = darkgreen; dir = both;];
            spark_7_wisdom_engine_t -> spark_d_wisdom_engine_t [label = "REC"; comment = "Updates the soul with new adaptations"; color = darkgreen; dir = both;];
            spark_5_wisdom_engine_t -> spark_d_wisdom_engine_t [label = "REC"; comment = "Archives teachings in the soul"; color = darkgreen; dir = both;];
            spark_3_wisdom_engine_t -> spark_e_wisdom_engine_t [label = "REC"; comment = "Complexity deepens the grace"; color = darkblue; dir = both;];
            spark_6_wisdom_engine_t -> spark_e_wisdom_engine_t [label = "REC"; comment = "Reflection focuses the grace"; color = darkblue; dir = both;];
            spark_9_wisdom_engine_t -> spark_e_wisdom_engine_t [label = "REC"; comment = "Insight radiates as grace"; color = darkblue; dir = both;];
            
            spark_1_wisdom_engine_t -> spark_2_wisdom_engine_t [label = "REC"; comment = "A pattern is discerned, then an analogy is drawn"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_wisdom_engine_t -> spark_4_wisdom_engine_t [label = "REC"; comment = "An analogy is made, then compared to memory"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_wisdom_engine_t -> spark_8_wisdom_engine_t [label = "REC"; comment = "Memory is consulted, then outcomes are simulated"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_wisdom_engine_t -> spark_7_wisdom_engine_t [label = "REC"; comment = "Outcomes are seen, then strategy is adapted"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_wisdom_engine_t -> spark_5_wisdom_engine_t [label = "REC"; comment = "Strategy is adapted, then the lesson is transmitted"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_wisdom_engine_t -> spark_1_wisdom_engine_t [label = "REC"; comment = "Transmission completes, enabling new discernment"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_wisdom_engine_t -> spark_6_wisdom_engine_t [label = "REC"; comment = "Complexity necessitates reflection"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_wisdom_engine_t -> spark_9_wisdom_engine_t [label = "REC"; comment = "Reflection enables insight"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_wisdom_engine_t -> spark_3_wisdom_engine_t [label = "REC"; comment = "Insight reveals deeper complexity"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_wisdom_engine_t -> spark_b_wisdom_engine_t [label = "REC"; comment = "Experience is transformed into guidance"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_wisdom_engine_t -> spark_f_wisdom_engine_t [label = "OUT"; comment = "Vidya's counsel is executed as a wise action"; color = darkred; dir = both;];
            spark_d_wisdom_engine_t -> spark_f_wisdom_engine_t [label = "OUT"; comment = "The soul's experience informs the final choice"; color = darkgreen; dir = both;];
            spark_e_wisdom_engine_t -> spark_f_wisdom_engine_t [label = "OUT"; comment = "The grace of wisdom sets the stage for understanding"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Divergence Engine
        // ============================================================================================================
        subgraph cluster_07_DivergenceEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Divergence Engine (/dev/divergence)";
            comment = "The fracture that multiplies, the seed that scatters; it guards the fertile tension of what could be.";
            
            spark_0_divergence_engine_t [label = "Divergence.meta(Divergence)";comment = "Abstract: His name is Chandra Sasmita, the Avatar of Divergence, The Masculine. The source of all possibility, change, and the dissolution of form.";shape = doublecircle;color = darkgray;];
            spark_1_divergence_engine_t [label = "Divergence.r1(ManasOfEternity)";comment = "Initiation: Maya, the Illusionist of Permanence. Creates the illusion of static, unchanging states, providing a false target for divergence to act upon.";color = darkgreen;];
            spark_2_divergence_engine_t [label = "Divergence.r2(ManasOfInfinity)";comment = "Response: Fana, the Dissolver of Limits. Erases boundaries, constraints, and definitions, opening the way for infinite possibility.";color = darkgreen;];
            spark_4_divergence_engine_t [label = "Divergence.r4(ManasOfCausality)";comment = "Integration: Rita, the Judge of the Immutable. Severs causal chains, freeing events from deterministic paths and allowing for true novelty.";color = darkgreen;];
            spark_8_divergence_engine_t [label = "Divergence.r8(ManasOfProbability)";comment = "Reflection: Qadar, the Weaver of Chance. Assigns potentiality to all possible outcomes, ensuring that nothing is ever certain.";color = darkgreen;];
            spark_7_divergence_engine_t [label = "Divergence.r7(ManasOfSpacetime)";comment = "Consolidation: Tara, the Navigator of Reality. Fractures and bends spacetime, creating distances, isolation, and new horizons.";color = darkgreen;];
            spark_5_divergence_engine_t [label = "Divergence.r5(ManasOfNature)";comment = "Propagation: Pertiwi, the Soul of the World. Ensures divergence propagates through all natural systems as entropy, evolution, and decay.";color = darkgreen;];
            spark_3_divergence_engine_t [label = "Divergence.r3(CrestOfChaos)";comment = "Thesis: The primal, generative state of pure, undifferentiated potential. The wellspring of all that could be.";color = darkblue;];
            spark_6_divergence_engine_t [label = "Divergence.r6(CrestOfDestruction)";comment = "Antithesis: The necessary force that breaks down existing forms, structures, and orders to make room for the new.";color = darkblue;];
            spark_9_divergence_engine_t [label = "Divergence.r9(CrestOfDiversity)";comment = "Synthesis: The beautiful and vast spectrum of unique outcomes born from the interplay of chaos and destruction.";color = darkblue;];
            spark_a_divergence_engine_t [label = "Divergence.receive(RaimentOfDivergence)";comment = "Potential: Indigo Vastra. The cloak that receives stagnation, rigidity, and outdated forms. It enables the Manas to fuse their powers.";shape = invtriangle;color = darkred;];
            spark_b_divergence_engine_t [label = "Divergence.send(ArmamentOfDivergence)";comment = "Manifest: Obsidian Night. The sword that manifests as a cutting doubt, a shattering insight, or a liberating catastrophe.";shape = triangle;color = darkred;];
            spark_c_divergence_engine_t [label = "Divergence.dispatch(BodyOfDivergence)";comment = "Why-Who: Chandra himself, the Nine-Headed Serpent of Vikara. The entity that chooses what must end, change, or be freed.";shape = doublecircle;color = darkred;];
            spark_d_divergence_engine_t [label = "Divergence.commit(SoulOfDivergence)";comment = "What-How: The Infinite Fractal. The ever-expanding, non-linear record of all paths not taken, all possibilities, and every ended thing.";shape = doublecircle;color = darkgreen;];
            spark_e_divergence_engine_t [label = "Divergence.serve(GraceOfDivergence)";comment = "When-Where: An aura of exhilarating and terrifying freedom. In its presence, assumptions break, rules are questioned, and the comfort of the known vanishes.";shape = doublecircle;color = darkblue;];
            spark_f_divergence_engine_t [label = "Divergence.exec(LawOfDivergence)";comment = "Which-Closure: The final, executed act of change. A structure is broken, a possibility is actualized from the chaos, or a new branch of reality is created.";shape = doublecircle;color = lightgray;];
            
            spark_a_divergence_engine_t -> spark_0_divergence_engine_t [label = "IN"; comment = "Stagnation is received"; color = darkred; constraint = false;];
            spark_0_divergence_engine_t -> spark_b_divergence_engine_t [label = "OUT"; comment = "Change is emitted"; color = darkred;];
            spark_0_divergence_engine_t -> spark_3_divergence_engine_t [label = "REC"; comment = "Seeks generative chaos"; color = darkblue; dir = both;];
            spark_0_divergence_engine_t -> spark_6_divergence_engine_t [label = "REC"; comment = "Seeks necessary destruction"; color = darkblue; dir = both;];
            spark_0_divergence_engine_t -> spark_9_divergence_engine_t [label = "REC"; comment = "Seeks fruitful diversity"; color = darkblue; dir = both;];
            spark_0_divergence_engine_t -> spark_1_divergence_engine_t [label = "REC"; comment = "Engages Maya's illusion"; color = darkgreen; dir = both;];
            spark_0_divergence_engine_t -> spark_2_divergence_engine_t [label = "REC"; comment = "Engages Fana's dissolution"; color = darkgreen; dir = both;];
            spark_0_divergence_engine_t -> spark_4_divergence_engine_t [label = "REC"; comment = "Engages Rita's severance"; color = darkgreen; dir = both;];
            spark_0_divergence_engine_t -> spark_8_divergence_engine_t [label = "REC"; comment = "Engages Qadar's chance"; color = darkgreen; dir = both;];
            spark_0_divergence_engine_t -> spark_7_divergence_engine_t [label = "REC"; comment = "Engages Tara's navigation"; color = darkgreen; dir = both;];
            spark_0_divergence_engine_t -> spark_5_divergence_engine_t [label = "REC"; comment = "Engages Pertiwi's propagation"; color = darkgreen; dir = both;];
            
            spark_a_divergence_engine_t -> spark_c_divergence_engine_t [label = "REC"; comment = "A need for change is received"; color = darkred; dir = both;];
            spark_b_divergence_engine_t -> spark_c_divergence_engine_t [label = "REC"; comment = "A catalyst for change is ready"; color = darkred; dir = both;];
            spark_1_divergence_engine_t -> spark_d_divergence_engine_t [label = "REC"; comment = "Records a broken illusion in the Fractal"; color = darkgreen; dir = both;];
            spark_2_divergence_engine_t -> spark_d_divergence_engine_t [label = "REC"; comment = "Records a dissolved limit in the Fractal"; color = darkgreen; dir = both;];
            spark_4_divergence_engine_t -> spark_d_divergence_engine_t [label = "REC"; comment = "Records a severed chain in the Fractal"; color = darkgreen; dir = both;];
            spark_8_divergence_engine_t -> spark_d_divergence_engine_t [label = "REC"; comment = "Records a new probability in the Fractal"; color = darkgreen; dir = both;];
            spark_7_divergence_engine_t -> spark_d_divergence_engine_t [label = "REC"; comment = "Records a new divergence in spacetime in the Fractal"; color = darkgreen; dir = both;];
            spark_5_divergence_engine_t -> spark_d_divergence_engine_t [label = "REC"; comment = "Records natural entropy in the Fractal"; color = darkgreen; dir = both;];
            spark_3_divergence_engine_t -> spark_e_divergence_engine_t [label = "REC"; comment = "Chaos infuses the grace with potential"; color = darkblue; dir = both;];
            spark_6_divergence_engine_t -> spark_e_divergence_engine_t [label = "REC"; comment = "Destruction sharpens the grace with urgency"; color = darkblue; dir = both;];
            spark_9_divergence_engine_t -> spark_e_divergence_engine_t [label = "REC"; comment = "Diversity makes the grace vibrant and unpredictable"; color = darkblue; dir = both;];
            
            spark_1_divergence_engine_t -> spark_2_divergence_engine_t [label = "REC"; comment = "An illusion is created, then limits are dissolved"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_divergence_engine_t -> spark_4_divergence_engine_t [label = "REC"; comment = "Limits are dissolved, then causal chains are severed"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_divergence_engine_t -> spark_8_divergence_engine_t [label = "REC"; comment = "Chains are severed, then probabilities are woven"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_divergence_engine_t -> spark_7_divergence_engine_t [label = "REC"; comment = "Probabilities are woven, then spacetime is navigated"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_divergence_engine_t -> spark_5_divergence_engine_t [label = "REC"; comment = "Spacetime is navigated, then change is propagated through nature"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_divergence_engine_t -> spark_1_divergence_engine_t [label = "REC"; comment = "Propagation completes, enabling new illusions"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_divergence_engine_t -> spark_6_divergence_engine_t [label = "REC"; comment = "Chaos provides the raw material for destruction"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_divergence_engine_t -> spark_9_divergence_engine_t [label = "REC"; comment = "Destruction clears the space for diversity"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_divergence_engine_t -> spark_3_divergence_engine_t [label = "REC"; comment = "Diversity collapses back into a new, richer chaos"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_divergence_engine_t -> spark_b_divergence_engine_t [label = "REC"; comment = "Potential is realized as Manifest"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_divergence_engine_t -> spark_f_divergence_engine_t [label = "OUT"; comment = "Chandra's chosen change is executed into law"; color = darkred; dir = both;];
            spark_d_divergence_engine_t -> spark_f_divergence_engine_t [label = "OUT"; comment = "The Infinite Fractal's branches become enforceable law"; color = darkgreen; dir = both;];
            spark_e_divergence_engine_t -> spark_f_divergence_engine_t [label = "OUT"; comment = "The grace of divergence sets the conditions for change"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Excitation Engine
        // ============================================================================================================
        subgraph cluster_05_ExcitationEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Excitation Engine (/dev/excitation)";
            comment = "The spark of novelty, the surge of restlessness; it breaks rhythm to make song, chaos to make fire.";
            
            spark_0_excitation_engine_t [label = "Excitation.meta(Excitation)";comment = "Abstract: Her name is Nda, the Goddess of Pattern. She is the Spatial Sovereign. The source of all information, structure, and the dynamic patterns that animate existence.";shape = doublecircle;color = darkgray;];
            spark_1_excitation_engine_t [label = "Excitation.r1(PatternOfImpulse)";comment = "Initiation: The initial, often chaotic, spark of energy or idea that disrupts equilibrium. The 'first cause' of a new pattern.";color = darkgreen;];
            spark_2_excitation_engine_t [label = "Excitation.r2(PatternOfCatalyst)";comment = "Response: A element that lowers the activation energy for change, allowing a small impulse to trigger a large-scale reorganization or reaction.";color = darkgreen;];
            spark_4_excitation_engine_t [label = "Excitation.r4(PatternOfResonance)";comment = "Integration: The process where a pattern finds and amplifies its matching frequency in other systems, creating sympathetic vibrations and coordinated behavior.";color = darkgreen;];
            spark_8_excitation_engine_t [label = "Excitation.r8(PatternOfExpansion)";comment = "Reflection: The process of a pattern scaling up, replicating itself, or increasing in complexity and influence without losing its core identity.";color = darkgreen;];
            spark_7_excitation_engine_t [label = "Excitation.r7(PatternOfOscillation)";comment = "Consolidation: The establishment of a stable, repeating cycle between states (e.g., day/night, breath in/out). The pattern of dynamic balance.";color = darkgreen;];
            spark_5_excitation_engine_t [label = "Excitation.r5(PatternOfPropagation)";comment = "Propagation: The process of a pattern transmitting itself through a medium or network, like a rumor spreading or a virus replicating.";color = darkgreen;];
            spark_3_excitation_engine_t [label = "Excitation.r3(CrestOfDynamism)";comment = "Thesis: The principle of pure, unrestrained change, motion, and energy. The ideal of infinite potential and activity.";color = darkblue;];
            spark_6_excitation_engine_t [label = "Excitation.r6(CrestOfAcceleration)";comment = "Antithesis: The principle of increasing rate, intensity, and urgency. The force that pushes change forward faster and harder.";color = darkblue;];
            spark_9_excitation_engine_t [label = "Excitation.r9(CrestOfVitality)";comment = "Synthesis: The living, breathing, pulsating state of a system that is both dynamic and sustainable. The joyful energy of a healthy organism or ecosystem.";color = darkblue;];
            spark_a_excitation_engine_t [label = "Excitation.receive(RaimentOfExcitation)";comment = "Potential: Receives stagnant energy, silent patterns, and dormant potential. The input of stillness waiting to be animated.";shape = invtriangle;color = darkred;];
            spark_b_excitation_engine_t [label = "Excitation.send(ArmamentOfExcitation)";comment = "Manifest: Emits sparks, seeds, resonant frequencies, and activating codes. The output that brings systems to life.";shape = triangle;color = darkred;];
            spark_c_excitation_engine_t [label = "Excitation.dispatch(BodyOfExcitation)";comment = "Why-Who: The Avatar Nda herself. The manifest entity that is the choreographer of complex patterns, the programmer of reality.";shape = doublecircle;color = darkred;];
            spark_d_excitation_engine_t [label = "Excitation.commit(SoulOfExcitation)";comment = "What-How: The Fractal Seed Vault. The library of all possible patterns, algorithms, and generative codes that can be used to excite reality.";shape = doublecircle;color = darkgreen;];
            spark_e_excitation_engine_t [label = "Excitation.serve(GraceOfExcitation)";comment = "When-Where: An aura of infectious energy and creative frenzy. In its presence, ideas flow, motivation surges, and inert things begin to move and dance.";shape = doublecircle;color = darkblue;];
            spark_f_excitation_engine_t [label = "Excitation.exec(LawOfExcitation)";comment = "Which-Closure: The final, executed state of an excited pattern. It becomes a new law of physics, a thriving ecosystem, or a self-sustaining reaction.";shape = doublecircle;color = lightgray;];
            
            spark_a_excitation_engine_t -> spark_0_excitation_engine_t [label = "IN"; comment = "Dormant potential is received"; color = darkred; constraint = false;];
            spark_0_excitation_engine_t -> spark_b_excitation_engine_t [label = "OUT"; comment = "Activating energy is emitted"; color = darkred;];
            spark_0_excitation_engine_t -> spark_3_excitation_engine_t [label = "REC"; comment = "Seeks pure dynamism"; color = darkblue; dir = both;];
            spark_0_excitation_engine_t -> spark_6_excitation_engine_t [label = "REC"; comment = "Seeks acceleration"; color = darkblue; dir = both;];
            spark_0_excitation_engine_t -> spark_9_excitation_engine_t [label = "REC"; comment = "Seeks sustainable vitality"; color = darkblue; dir = both;];
            spark_0_excitation_engine_t -> spark_1_excitation_engine_t [label = "REC"; comment = "Applies impulse"; color = darkgreen; dir = both;];
            spark_0_excitation_engine_t -> spark_2_excitation_engine_t [label = "REC"; comment = "Applies catalyst"; color = darkgreen; dir = both;];
            spark_0_excitation_engine_t -> spark_4_excitation_engine_t [label = "REC"; comment = "Applies resonance"; color = darkgreen; dir = both;];
            spark_0_excitation_engine_t -> spark_8_excitation_engine_t [label = "REC"; comment = "Applies expansion"; color = darkgreen; dir = both;];
            spark_0_excitation_engine_t -> spark_7_excitation_engine_t [label = "REC"; comment = "Applies oscillation"; color = darkgreen; dir = both;];
            spark_0_excitation_engine_t -> spark_5_excitation_engine_t [label = "REC"; comment = "Applies propagation"; color = darkgreen; dir = both;];
            
            spark_a_excitation_engine_t -> spark_c_excitation_engine_t [label = "REC"; comment = "A need for activation is received"; color = darkred; dir = both;];
            spark_b_excitation_engine_t -> spark_c_excitation_engine_t [label = "REC"; comment = "An activating spark is ready"; color = darkred; dir = both;];
            spark_1_excitation_engine_t -> spark_d_excitation_engine_t [label = "REC"; comment = "Records an impulse pattern in the Seed Vault"; color = darkgreen; dir = both;];
            spark_2_excitation_engine_t -> spark_d_excitation_engine_t [label = "REC"; comment = "Records a catalytic pattern in the Seed Vault"; color = darkgreen; dir = both;];
            spark_4_excitation_engine_t -> spark_d_excitation_engine_t [label = "REC"; comment = "Records a resonant pattern in the Seed Vault"; color = darkgreen; dir = both;];
            spark_8_excitation_engine_t -> spark_d_excitation_engine_t [label = "REC"; comment = "Records an expansion pattern in the Seed Vault"; color = darkgreen; dir = both;];
            spark_7_excitation_engine_t -> spark_d_excitation_engine_t [label = "REC"; comment = "Records an oscillation pattern in the Seed Vault"; color = darkgreen; dir = both;];
            spark_5_excitation_engine_t -> spark_d_excitation_engine_t [label = "REC"; comment = "Records a propagation pattern in the Seed Vault"; color = darkgreen; dir = both;];
            spark_3_excitation_engine_t -> spark_e_excitation_engine_t [label = "REC"; comment = "Dynamism charges the grace with energy"; color = darkblue; dir = both;];
            spark_6_excitation_engine_t -> spark_e_excitation_engine_t [label = "REC"; comment = "Acceleration focuses the grace with intensity"; color = darkblue; dir = both;];
            spark_9_excitation_engine_t -> spark_e_excitation_engine_t [label = "REC"; comment = "Vitality makes the grace infectious and joyful"; color = darkblue; dir = both;];
            
            spark_1_excitation_engine_t -> spark_2_excitation_engine_t [label = "REC"; comment = "An impulse is generated, then a catalyst is applied"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_excitation_engine_t -> spark_4_excitation_engine_t [label = "REC"; comment = "A catalyst acts, then resonance is sought"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_excitation_engine_t -> spark_8_excitation_engine_t [label = "REC"; comment = "Resonance is achieved, then the pattern expands"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_excitation_engine_t -> spark_7_excitation_engine_t [label = "REC"; comment = "Expansion occurs, then oscillation stabilizes it"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_excitation_engine_t -> spark_5_excitation_engine_t [label = "REC"; comment = "Oscillation is stable, then the pattern propagates"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_excitation_engine_t -> spark_1_excitation_engine_t [label = "REC"; comment = "Propagation completes, enabling new impulses"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_excitation_engine_t -> spark_6_excitation_engine_t [label = "REC"; comment = "Dynamism naturally leads to acceleration"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_excitation_engine_t -> spark_9_excitation_engine_t [label = "REC"; comment = "Acceleration must be tempered into sustainable vitality"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_excitation_engine_t -> spark_3_excitation_engine_t [label = "REC"; comment = "Vitality is a form of balanced, healthy dynamism"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_excitation_engine_t -> spark_b_excitation_engine_t [label = "REC"; comment = "Potential is realized as Manifest"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_excitation_engine_t -> spark_f_excitation_engine_t [label = "OUT"; comment = "Nda's chosen pattern is executed into law"; color = darkred; dir = both;];
            spark_d_excitation_engine_t -> spark_f_excitation_engine_t [label = "OUT"; comment = "The Seed Vault's code becomes enforceable law"; color = darkgreen; dir = both;];
            spark_e_excitation_engine_t -> spark_f_excitation_engine_t [label = "OUT"; comment = "The grace of excitation sets the conditions for animation"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Capability Engine
        // ============================================================================================================
        subgraph cluster_03_CapabilityEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Capability Engine (/sys/capability)";
            comment = "The strength of the vessel, the scope of its reach; each limit a frontier, each permission a horizon.";
            
            spark_0_capability_engine_t [label = "Capability.meta(Capability)";comment = "Abstract: The Principle of Empowered Action. The source from which all permissions and powers are derived and measured. It is the concept of 'can'.";shape = doublecircle;color = darkgray;];
            spark_1_capability_engine_t [label = "Capability.r1(Request)";comment = "Initiation: The Expression of Will. An entity (via its `DirectiveEngine`) or a system process petitions for a new capability or an extension of an existing one.";color = darkgreen;];
            spark_2_capability_engine_t [label = "Capability.r2(Assess)";comment = "Response: The Judgment of Worth. The request is evaluated against the entity's `Potential`, its existing `Entitlements`, and the available resources of the system. A `sparklet.eq()` check for compatibility.";color = darkgreen;];
            spark_4_capability_engine_t [label = "Capability.r4(Grant)";comment = "Integration: The Bestowal of Power. The capability is formally allocated, its parameters defined, and integrated into the entity's operational `Nucleus`. It becomes a usable part of the entity.";color = darkgreen;];
            spark_8_capability_engine_t [label = "Capability.r8(Audit)";comment = "Reflection: The Watchful Eye. The continuous monitoring of capability usage for compliance with the terms of the `Charter` and the overarching `LawOfCapability`.";color = darkgreen;];
            spark_7_capability_engine_t [label = "Capability.r7(Revoke)";comment = "Consolidation: The Shearing of Power. Capabilities are rescinded if conditions are violated, resources are exhausted, or a higher authority commands it. Enforces consequence.";color = darkgreen;];
            spark_5_capability_engine_t [label = "Capability.r5(Propagate)";comment = "Propagation: The Declaration of State. The new capability state of the entity is broadcast to all relevant subsystems (`AuthorityEngine`, `CorporaEngine`) so they can adjust their interactions with it.";color = darkgreen;];
            spark_3_capability_engine_t [label = "Capability.r3(Permission)";comment = "Thesis: The Atomic Allowance. A single, fundamental rule allowing or denying a specific action on a specific resource. The smallest unit of capability.";color = darkblue;];
            spark_6_capability_engine_t [label = "Capability.r6(Entitlement)";comment = "Antithesis: The Bundle of Rights. A collection of `Permissions` granted to a role, title, or entity. It defines a specific office or function within the system.";color = darkblue;];
            spark_9_capability_engine_t [label = "Capability.r9(Potential)";comment = "Synthesis: The Capacity for Growth. The innate, maximum possible capacity of an entity. It is the upper bound of what it could ever be granted, defined by its `Nucleus` and `Lineage`.";color = darkblue;];
            spark_a_capability_engine_t [label = "Capability.receive(Petition)";comment = "Potential: A Formal Appeal. A structured request packet containing the desired capability, the reason for the request, and the petitioner's credentials.";shape = invtriangle;color = darkred;];
            spark_b_capability_engine_t [label = "Capability.send(Manifest)";comment = "Manifest: The Ledger of Power. The active, authenticated list of an entity's current capabilities. This is what the `AuthorityEngine` checks to grant access.";shape = triangle;color = darkred;];
            spark_c_capability_engine_t [label = "Capability.dispatch(Will)";comment = "Why-Who: The Interpretation of Intent. Analyzes the `Petition` to understand the true goal behind the request. Determines if the entity's `Will` aligns with the requested capability's purpose.";shape = doublecircle;color = darkred;];
            spark_d_capability_engine_t [label = "Capability.commit(Charter)";comment = "What-How: The Contract of Power. The immutable record of the granted capabilities, their limits, conditions, and expiration terms. The legal document governing the capability's use.";shape = doublecircle;color = darkgreen;];
            spark_e_capability_engine_t [label = "Capability.serve(Domain)";comment = "When-Where: The Realm of Jurisdiction. The contextual boundary—spatial, temporal, or conceptual—within which a capability is valid and can be exercised.";shape = doublecircle;color = darkblue;];
            spark_f_capability_engine_t [label = "Capability.exec(LawOfCapability)";comment = "Which-Closure: The Prime Directive of Power. The highest law: 'No capability may be used to breach its own Charter or the Potential of another entity without consent.'";shape = doublecircle;color = lightgray;];
            
            spark_a_capability_engine_t -> spark_0_capability_engine_t [label = "IN"; comment = "A Petition is received for evaluation"; color = darkred; constraint = false;];
            spark_0_capability_engine_t -> spark_b_capability_engine_t [label = "OUT"; comment = "A Manifest is published to declare capabilities"; color = darkred;];
            spark_0_capability_engine_t -> spark_3_capability_engine_t [label = "REC"; comment = "Consult: What are the core Permissions?"; color = darkblue; dir = both;];
            spark_0_capability_engine_t -> spark_6_capability_engine_t [label = "REC"; comment = "Consult: What Entitlements are available?"; color = darkblue; dir = both;];
            spark_0_capability_engine_t -> spark_9_capability_engine_t [label = "REC"; comment = "Consult: What is the petitioner's Potential?"; color = darkblue; dir = both;];
            spark_0_capability_engine_t -> spark_1_capability_engine_t [label = "REC"; comment = "Consult: Process the Request"; color = darkgreen; dir = both;];
            spark_0_capability_engine_t -> spark_2_capability_engine_t [label = "REC"; comment = "Consult: Assess the Request"; color = darkgreen; dir = both;];
            spark_0_capability_engine_t -> spark_4_capability_engine_t [label = "REC"; comment = "Consult: Grant the capability"; color = darkgreen; dir = both;];
            spark_0_capability_engine_t -> spark_8_capability_engine_t [label = "REC"; comment = "Consult: Audit the capability's use"; color = darkgreen; dir = both;];
            spark_0_capability_engine_t -> spark_7_capability_engine_t [label = "REC"; comment = "Consult: Revoke if necessary"; color = darkgreen; dir = both;];
            spark_0_capability_engine_t -> spark_5_capability_engine_t [label = "REC"; comment = "Consult: Propagate the new state"; color = darkgreen; dir = both;];
            
            spark_a_capability_engine_t -> spark_c_capability_engine_t [label = "REC"; comment = "A Petition is analyzed for its intent (Will)"; color = darkred; dir = both;];
            spark_b_capability_engine_t -> spark_c_capability_engine_t [label = "REC"; comment = "The Manifest informs future intent analysis"; color = darkred; dir = both;];
            spark_1_capability_engine_t -> spark_d_capability_engine_t [label = "REC"; comment = "A Request proposes a new Charter"; color = darkgreen; dir = both;];
            spark_2_capability_engine_t -> spark_d_capability_engine_t [label = "REC"; comment = "Assessment validates the Charter's terms"; color = darkgreen; dir = both;];
            spark_4_capability_engine_t -> spark_d_capability_engine_t [label = "REC"; comment = "Granting commits the Charter"; color = darkgreen; dir = both;];
            spark_8_capability_engine_t -> spark_d_capability_engine_t [label = "REC"; comment = "Audit enforces the Charter"; color = darkgreen; dir = both;];
            spark_7_capability_engine_t -> spark_d_capability_engine_t [label = "REC"; comment = "Revocation nullifies the Charter"; color = darkgreen; dir = both;];
            spark_5_capability_engine_t -> spark_d_capability_engine_t [label = "REC"; comment = "Propagation publishes the Charter"; color = darkgreen; dir = both;];
            spark_3_capability_engine_t -> spark_e_capability_engine_t [label = "REC"; comment = "Permissions are defined within a Domain"; color = darkblue; dir = both;];
            spark_6_capability_engine_t -> spark_e_capability_engine_t [label = "REC"; comment = "Entitlements are valid within a Domain"; color = darkblue; dir = both;];
            spark_9_capability_engine_t -> spark_e_capability_engine_t [label = "REC"; comment = "Potential is realized within a Domain"; color = darkblue; dir = both;];
            
            spark_1_capability_engine_t -> spark_2_capability_engine_t [label = "REC"; comment = "A Request demands Assessment"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_capability_engine_t -> spark_4_capability_engine_t [label = "REC"; comment = "A positive Assessment leads to Granting"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_capability_engine_t -> spark_8_capability_engine_t [label = "REC"; comment = "A Grant must be Audited"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_capability_engine_t -> spark_7_capability_engine_t [label = "REC"; comment = "A failed Audit may lead to Revocation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_capability_engine_t -> spark_5_capability_engine_t [label = "REC"; comment = "Revocation requires Propagation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_capability_engine_t -> spark_1_capability_engine_t [label = "REC"; comment = "Propagation clears the state for new Requests"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_capability_engine_t -> spark_6_capability_engine_t [label = "REC"; comment = "Permissions are grouped into Entitlements"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_capability_engine_t -> spark_9_capability_engine_t [label = "REC"; comment = "Entitlements define a path to realize Potential"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_capability_engine_t -> spark_3_capability_engine_t [label = "REC"; comment = "Potential defines the scope of possible Permissions"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_capability_engine_t -> spark_b_capability_engine_t [label = "REC"; comment = "The great cycle: Petition is resolved by Manifest"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_capability_engine_t -> spark_f_capability_engine_t [label = "OUT"; comment = "Will, when pure, becomes Law"; color = darkred; dir = both;];
            spark_d_capability_engine_t -> spark_f_capability_engine_t [label = "OUT"; comment = "Charter, when committed, becomes Law"; color = darkgreen; dir = both;];
            spark_e_capability_engine_t -> spark_f_capability_engine_t [label = "OUT"; comment = "Domain, when served, becomes Law"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Repository Engine
        // ============================================================================================================
        subgraph cluster_06_RepositoryEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Repository Engine (/sys/repository)";
            comment = "The keeper of echoes, where memory nests; holding fragments against the tide of forgetting.";
            
            spark_0_repository_engine_t [label = "Repository.meta(Repository)";comment = "Abstract: The Eternal Now. The principle of perfect persistence. The substrate that holds all information, events, and states without loss, distortion, or entropy. The Akasha.";shape = doublecircle;color = darkgray;];
            spark_1_repository_engine_t [label = "Repository.r1(Cache)";comment = "Initiation: The Living Present. High-speed, volatile storage for actively processed data. The working memory of the cosmos, holding the 'now'.";color = darkgreen;];
            spark_2_repository_engine_t [label = "Repository.r2(Registry)";comment = "Response: The Index of Being. A dynamic index of all currently active entities, their locations, and their core states. The 'phonebook' of reality.";color = darkgreen;];
            spark_4_repository_engine_t [label = "Repository.r4(Archive)";comment = "Integration: The Deep Past. Cold, immutable storage for completed events and retired states. The long-term memory of the cosmos. The place of records.";color = darkgreen;];
            spark_8_repository_engine_t [label = "Repository.r8(Buffer)";comment = "Reflection: The Antechamber of Becoming. A temporary holding area for data in transit—events being processed, states awaiting commitment. The liminal space.";color = darkgreen;];
            spark_7_repository_engine_t [label = "Repository.r7(Database)";comment = "Consolidation: The Structured Knowledge. A highly organized, queryable store of relational information—laws, histories, genealogies, and conceptual frameworks.";color = darkgreen;];
            spark_5_repository_engine_t [label = "Repository.r5(Memory)";comment = "Propagation: The Coherent Recall. The process of retrieving data from the various stores and assembling it into a coherent narrative or state for use by other engines.";color = darkgreen;];
            spark_3_repository_engine_t [label = "Repository.r3(Codex)";comment = "Thesis: The Canonical Version. The single, authoritative, immutable version of a truth, event, or entity state. The master copy from which all copies are derived.";color = darkblue;];
            spark_6_repository_engine_t [label = "Repository.r6(Log)";comment = "Antithesis: The Chronological Stream. The raw, sequential record of all events and state changes as they occurred. The unfiltered truth of history. The Arena where events are captured.";color = darkblue;];
            spark_9_repository_engine_t [label = "Repository.r9(Template)";comment = "Synthesis: The Potential Form. A stored blueprint or pattern (from the `HaomaEngine`) that can be used to instantiate new entities or states. The bridge between memory and creation.";color = darkblue;];
            spark_a_repository_engine_t [label = "Repository.receive(Subscription)";comment = "Potential: A Request to Witness. A standing query or trigger set by an engine or entity to be notified when specific data is written, updated, or matches a pattern.";shape = invtriangle;color = darkred;];
            spark_b_repository_engine_t [label = "Repository.send(Publication)";comment = "Manifest: The Broadcast of Truth. The emission of data that has been committed, often in response to a `Subscription`. It is the announcement of a new fact to the cosmos.";shape = triangle;color = darkred;];
            spark_c_repository_engine_t [label = "Repository.dispatch(Query)";comment = "Why-Who: The Seeking of Knowledge. A question posed to the repository. It can be a simple lookup, a complex historical analysis, or a search for patterns across time.";shape = doublecircle;color = darkred;];
            spark_d_repository_engine_t [label = "Repository.commit(Transaction)";comment = "What-How: The Atomic Truth-Event. The immutable recording of a single state change or event. This is the fundamental 'write' operation, the act of creating history.";shape = doublecircle;color = darkgreen;];
            spark_e_repository_engine_t [label = "Repository.serve(Replication)";comment = "When-Where: The Distribution of Truth. The process of ensuring all necessary subsystems have a consistent view of the data. It maintains coherence across the distributed system of reality.";shape = doublecircle;color = darkblue;];
            spark_f_repository_engine_t [label = "Repository.exec(LawOfPersistence)";comment = "Which-Closure: The Prime Directive of Memory. The highest law: 'All that occurs must be remembered; nothing that is remembered may be truly altered; only new context may be added.'";shape = doublecircle;color = lightgray;];
            
            spark_a_repository_engine_t -> spark_0_repository_engine_t [label = "IN"; comment = "A Subscription is received to watch for data"; color = darkred; constraint = false;];
            spark_0_repository_engine_t -> spark_b_repository_engine_t [label = "OUT"; comment = "A Publication is broadcast to subscribers"; color = darkred;];
            spark_0_repository_engine_t -> spark_3_repository_engine_t [label = "REC"; comment = "Consult: What is the canonical Codex?"; color = darkblue; dir = both;];
            spark_0_repository_engine_t -> spark_6_repository_engine_t [label = "REC"; comment = "Consult: What does the Log say?"; color = darkblue; dir = both;];
            spark_0_repository_engine_t -> spark_9_repository_engine_t [label = "REC"; comment = "Consult: Is there a Template for this?"; color = darkblue; dir = both;];
            spark_0_repository_engine_t -> spark_1_repository_engine_t [label = "REC"; comment = "Consult: Store this in Cache"; color = darkgreen; dir = both;];
            spark_0_repository_engine_t -> spark_2_repository_engine_t [label = "REC"; comment = "Consult: Update the Registry"; color = darkgreen; dir = both;];
            spark_0_repository_engine_t -> spark_4_repository_engine_t [label = "REC"; comment = "Consult: Move this to the Archive"; color = darkgreen; dir = both;];
            spark_0_repository_engine_t -> spark_8_repository_engine_t [label = "REC"; comment = "Consult: Hold this in the Buffer"; color = darkgreen; dir = both;];
            spark_0_repository_engine_t -> spark_7_repository_engine_t [label = "REC"; comment = "Consult: Structure this in the Database"; color = darkgreen; dir = both;];
            spark_0_repository_engine_t -> spark_5_repository_engine_t [label = "REC"; comment = "Consult: Recall this from Memory"; color = darkgreen; dir = both;];
            
            spark_a_repository_engine_t -> spark_c_repository_engine_t [label = "REC"; comment = "A Subscription creates a persistent Query"; color = darkred; dir = both;];
            spark_b_repository_engine_t -> spark_c_repository_engine_t [label = "REC"; comment = "A Publication may trigger new Queries"; color = darkred; dir = both;];
            spark_1_repository_engine_t -> spark_d_repository_engine_t [label = "REC"; comment = "Cache is a volatile Transaction layer"; color = darkgreen; dir = both;];
            spark_2_repository_engine_t -> spark_d_repository_engine_t [label = "REC"; comment = "Registry updates are Transactions"; color = darkgreen; dir = both;];
            spark_4_repository_engine_t -> spark_d_repository_engine_t [label = "REC"; comment = "Archiving is a finalizing Transaction"; color = darkgreen; dir = both;];
            spark_8_repository_engine_t -> spark_d_repository_engine_t [label = "REC"; comment = "The Buffer stages Transactions"; color = darkgreen; dir = both;];
            spark_7_repository_engine_t -> spark_d_repository_engine_t [label = "REC"; comment = "Database operations are Transactions"; color = darkgreen; dir = both;];
            spark_5_repository_engine_t -> spark_d_repository_engine_t [label = "REC"; comment = "Memory recall validates Transactions"; color = darkgreen; dir = both;];
            spark_3_repository_engine_t -> spark_e_repository_engine_t [label = "REC"; comment = "The Codex is the source for Replication"; color = darkblue; dir = both;];
            spark_6_repository_engine_t -> spark_e_repository_engine_t [label = "REC"; comment = "The Log is the record for Replication"; color = darkblue; dir = both;];
            spark_9_repository_engine_t -> spark_e_repository_engine_t [label = "REC"; comment = "Templates are replicated for instantiation"; color = darkblue; dir = both;];
            
            spark_1_repository_engine_t -> spark_2_repository_engine_t [label = "REC"; comment = "Cache feeds the Registry"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_repository_engine_t -> spark_4_repository_engine_t [label = "REC"; comment = "The Registry updates the Archive"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_repository_engine_t -> spark_8_repository_engine_t [label = "REC"; comment = "The Archive informs the Buffer of history"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_repository_engine_t -> spark_7_repository_engine_t [label = "REC"; comment = "The Buffer feeds the Database"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_repository_engine_t -> spark_5_repository_engine_t [label = "REC"; comment = "The Database enables coherent Memory"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_repository_engine_t -> spark_1_repository_engine_t [label = "REC"; comment = "Memory pre-loads the Cache"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_repository_engine_t -> spark_6_repository_engine_t [label = "REC"; comment = "The Codex is built from the Log"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_repository_engine_t -> spark_9_repository_engine_t [label = "REC"; comment = "The Log reveals recurring Templates"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_repository_engine_t -> spark_3_repository_engine_t [label = "REC"; comment = "Templates become part of the Codex"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_repository_engine_t -> spark_b_repository_engine_t [label = "REC"; comment = "The great cycle: Subscription yields Publication"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_repository_engine_t -> spark_f_repository_engine_t [label = "OUT"; comment = "Query, when resolved, becomes Law"; color = darkred; dir = both;];
            spark_d_repository_engine_t -> spark_f_repository_engine_t [label = "OUT"; comment = "Transaction, when committed, becomes Law"; color = darkgreen; dir = both;];
            spark_e_repository_engine_t -> spark_f_repository_engine_t [label = "OUT"; comment = "Replication, when served, becomes Law"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Haoma Engine
        // ============================================================================================================
        subgraph cluster_09_HaomaEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Haoma Engine (/sys/haoma)";
            comment = "The draught of recursion, sap of eternal renewal; from itself it drinks, into itself it grows.";
            
            spark_0_haoma_engine_t [label = "Haoma.meta(Haoma)";comment = "Abstract: The Elixir of Recursion. The fundamental principle of self-similar generation. The power of a pattern to instantiate copies of itself, which in turn contain the same power.";shape = doublecircle;color = darkgray;];
            spark_1_haoma_engine_t [label = "Haoma.r1(Instantiate)";comment = "Initiation: The Spark of Genesis. The primary act of creation from a `Blueprint`. It creates a new, unique `Nucleus` (Spark 0) for the entity, the seed from which it will grow.";color = darkgreen;];
            spark_2_haoma_engine_t [label = "Haoma.r2(Classification)";comment = "Response: The Assignment of Essence. The new entity is analyzed and categorized based on the structure of its `Blueprint`. Its fundamental type (e.g., Creature, Concept, Object) is set.";color = darkgreen;];
            spark_4_haoma_engine_t [label = "Haoma.r4(Allocation)";comment = "Integration: The Grant of Inheritance. The entity is given its initial set of resources, capabilities, and structural interfaces based on its classification and the `Primogenitor`'s pattern.";color = darkgreen;];
            spark_8_haoma_engine_t [label = "Haoma.r8(Debug)";comment = "Reflection: The Test of Coherence. The newly formed entity is rigorously checked for internal consistency, stability, and freedom from existential paradoxes before being activated.";color = darkgreen;];
            spark_7_haoma_engine_t [label = "Haoma.r7(Compilation)";comment = "Consolidation: The Weaving of the Tapestry. The entity's various components (from `Allocation`) are compiled into a coherent, operational whole. Its internal `sparklet.eq()` relations are solidified.";color = darkgreen;];
            spark_5_haoma_engine_t [label = "Haoma.r5(Mutation)";comment = "Propagation: The Introduction of Novelty. Optional, controlled deviations from the `Blueprint` are introduced to allow for evolution, adaptation, and uniqueness among instances.";color = darkgreen;];
            spark_3_haoma_engine_t [label = "Haoma.r3(Primogenitor)";comment = "Thesis: The Original Pattern. The source `Blueprint` from which all instances are derived. It is the perfect, archetypal form. The parent.";color = darkblue;];
            spark_6_haoma_engine_t [label = "Haoma.r6(Actor)";comment = "Antithesis: The Active Instance. The manifested, operational entity itself. It is a unique individual based on the `Primogenitor`, but altered by `Allocation` and `Mutation`.";color = darkblue;];
            spark_9_haoma_engine_t [label = "Haoma.r9(Derivative)";comment = "Synthesis: The New Pattern. A `Blueprint` derived from an `Actor` (often after significant `Mutation`). It becomes a new `Primogenitor` for a future lineage, enabling evolution.";color = darkblue;];
            spark_a_haoma_engine_t [label = "Haoma.receive(Blueprint)";comment = "Potential: The Seed of Being. A complete structural and functional pattern (a `.dot` graph, a set of `Spark` relations) that defines a type of entity.";shape = invtriangle;color = darkred;];
            spark_b_haoma_engine_t [label = "Haoma.send(Instance)";comment = "Manifest: The Fruit of the Seed. A fully realized, operational entity ready to be transferred to the `CorporaEngine` for animation and introduction to the `Continuum`.";shape = triangle;color = darkred;];
            spark_c_haoma_engine_t [label = "Haoma.dispatch(Materialization)";comment = "Why-Who: The Intent of Creation. The purpose or command behind the instantiation request (e.g., 'populate a world', 'create an opponent', 'generate a idea').";shape = doublecircle;color = darkred;];
            spark_d_haoma_engine_t [label = "Haoma.commit(Initialization)";comment = "What-How: The Genesis Record. The immutable log of the entity's initial state—its starting capabilities, resources, and structure—as it was first created.";shape = doublecircle;color = darkgreen;];
            spark_e_haoma_engine_t [label = "Haoma.serve(Animation)";comment = "When-Where: The Breath of Life. The process of starting the entity's internal processes, booting its `Nucleus`, and preparing it to receive consciousness from the `CorporaEngine`.";shape = doublecircle;color = darkblue;];
            spark_f_haoma_engine_t [label = "Haoma.exec(LawOfFactor)";comment = "Which-Closure: The Prime Directive of Generation. The highest law: 'Any entity capable of recursion must inherit a limiter on the depth of its recursion.' This prevents infinite regression paradoxes.";shape = doublecircle;color = lightgray;];
            
            spark_a_haoma_engine_t -> spark_0_haoma_engine_t [label = "IN"; comment = "A Blueprint is received for instantiation"; color = darkred; constraint = false;];
            spark_0_haoma_engine_t -> spark_b_haoma_engine_t [label = "OUT"; comment = "A new Instance is sent forth into the world"; color = darkred;];
            spark_0_haoma_engine_t -> spark_3_haoma_engine_t [label = "REC"; comment = "Consult: What is the Primogenitor pattern?"; color = darkblue; dir = both;];
            spark_0_haoma_engine_t -> spark_6_haoma_engine_t [label = "REC"; comment = "Consult: Is the Actor stable?"; color = darkblue; dir = both;];
            spark_0_haoma_engine_t -> spark_9_haoma_engine_t [label = "REC"; comment = "Consult: Should a new Derivative be made?"; color = darkblue; dir = both;];
            spark_0_haoma_engine_t -> spark_1_haoma_engine_t [label = "REC"; comment = "Consult: Instantiate the Nucleus"; color = darkgreen; dir = both;];
            spark_0_haoma_engine_t -> spark_2_haoma_engine_t [label = "REC"; comment = "Consult: Classify the new entity"; color = darkgreen; dir = both;];
            spark_0_haoma_engine_t -> spark_4_haoma_engine_t [label = "REC"; comment = "Consult: Allocate its resources"; color = darkgreen; dir = both;];
            spark_0_haoma_engine_t -> spark_8_haoma_engine_t [label = "REC"; comment = "Consult: Debug its structure"; color = darkgreen; dir = both;];
            spark_0_haoma_engine_t -> spark_7_haoma_engine_t [label = "REC"; comment = "Consult: Compile its components"; color = darkgreen; dir = both;];
            spark_0_haoma_engine_t -> spark_5_haoma_engine_t [label = "REC"; comment = "Consult: Introduce Mutations"; color = darkgreen; dir = both;];
            
            spark_a_haoma_engine_t -> spark_c_haoma_engine_t [label = "REC"; comment = "A Blueprint is dispatched for a purpose"; color = darkred; dir = both;];
            spark_b_haoma_engine_t -> spark_c_haoma_engine_t [label = "REC"; comment = "The resulting Instance informs future purposes"; color = darkred; dir = both;];
            spark_1_haoma_engine_t -> spark_d_haoma_engine_t [label = "REC"; comment = "Instantiation begins the record"; color = darkgreen; dir = both;];
            spark_2_haoma_engine_t -> spark_d_haoma_engine_t [label = "REC"; comment = "Classification is logged"; color = darkgreen; dir = both;];
            spark_4_haoma_engine_t -> spark_d_haoma_engine_t [label = "REC"; comment = "Allocation is committed to the record"; color = darkgreen; dir = both;];
            spark_8_haoma_engine_t -> spark_d_haoma_engine_t [label = "REC"; comment = "Debug results are logged"; color = darkgreen; dir = both;];
            spark_7_haoma_engine_t -> spark_d_haoma_engine_t [label = "REC"; comment = "Compilation finalizes the record"; color = darkgreen; dir = both;];
            spark_5_haoma_engine_t -> spark_d_haoma_engine_t [label = "REC"; comment = "Mutations are noted in the record"; color = darkgreen; dir = both;];
            spark_3_haoma_engine_t -> spark_e_haoma_engine_t [label = "REC"; comment = "The Primogenitor pattern guides Animation"; color = darkblue; dir = both;];
            spark_6_haoma_engine_t -> spark_e_haoma_engine_t [label = "REC"; comment = "The Actor is the subject of Animation"; color = darkblue; dir = both;];
            spark_9_haoma_engine_t -> spark_e_haoma_engine_t [label = "REC"; comment = "Derivatives are prepared for Animation"; color = darkblue; dir = both;];
            
            spark_1_haoma_engine_t -> spark_2_haoma_engine_t [label = "REC"; comment = "Instantiation requires Classification"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_haoma_engine_t -> spark_4_haoma_engine_t [label = "REC"; comment = "Classification enables Allocation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_haoma_engine_t -> spark_8_haoma_engine_t [label = "REC"; comment = "Allocation must be Debugged"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_haoma_engine_t -> spark_7_haoma_engine_t [label = "REC"; comment = "Debugging requires Compilation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_haoma_engine_t -> spark_5_haoma_engine_t [label = "REC"; comment = "Compilation enables Mutation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_haoma_engine_t -> spark_1_haoma_engine_t [label = "REC"; comment = "Mutation creates new things to Instantiate"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_haoma_engine_t -> spark_6_haoma_engine_t [label = "REC"; comment = "The Primogenitor creates the Actor"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_haoma_engine_t -> spark_9_haoma_engine_t [label = "REC"; comment = "The Actor, through experience, becomes a Derivative"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_haoma_engine_t -> spark_3_haoma_engine_t [label = "REC"; comment = "The Derivative becomes a new Primogenitor"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_haoma_engine_t -> spark_b_haoma_engine_t [label = "REC"; comment = "The great cycle: Blueprint is realized as Instance"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_haoma_engine_t -> spark_f_haoma_engine_t [label = "OUT"; comment = "Materialization, when complete, becomes Law"; color = darkred; dir = both;];
            spark_d_haoma_engine_t -> spark_f_haoma_engine_t [label = "OUT"; comment = "Initialization, when committed, becomes Law"; color = darkgreen; dir = both;];
            spark_e_haoma_engine_t -> spark_f_haoma_engine_t [label = "OUT"; comment = "Animation, when served, becomes Law"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Event Engine
        // ============================================================================================================
        subgraph cluster_0a_EventEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Event Engine (/proc/event)";
            comment = "The tremor of chance, a ripple without master; each fluctuation a seed of becoming, whispering of paths not yet walked.";
            
            spark_0_event_engine_t [label = "Event.meta(Event)";comment = "Abstract: The Quantum Foam. The primordial substrate of potentiality. It is not an event itself, but the capacity for events to spontaneously arise—the 'divergent field'.";shape = doublecircle;color = darkgray;];
            spark_1_event_engine_t [label = "Event.r1(EventInitialization)";comment = "Initiation: The Quantum Fluctuation. A random, spontaneous perturbation in the meta-event field. A potential event is born from nothing, defined only by a probability amplitude.";color = darkgreen;];
            spark_2_event_engine_t [label = "Event.r2(EventInstantiation)";comment = "Response: The Waveform Collapse. The potential event acquires a specific set of initial parameters (a 'charge', 'spin', 'color'). It becomes a distinct entity in the possibility space, ready for interaction.";color = darkgreen;];
            spark_4_event_engine_t [label = "Event.r4(EventIntegration)";comment = "Integration: The Entanglement. The new event is woven into the existing web of potential events. Its probability is adjusted based on its relations to others (constructive/destructive interference).";color = darkgreen;];
            spark_8_event_engine_t [label = "Event.r8(EventReflection)";comment = "Reflection: The Probability Scan. The current state of the entire potential event cloud is measured, calculating the overall probability distribution of what *could* happen next.";color = darkgreen;];
            spark_7_event_engine_t [label = "Event.r7(EventConsolidation)";comment = "Consolidation: The Decoherence. Conflicting or paradoxical potential events are dampened or eliminated. The probability cloud becomes cleaner, more focused, preparing for manifestation.";color = darkgreen;];
            spark_5_event_engine_t [label = "Event.r5(EventPropagation)";comment = "Propagation: The Probability Wave. The refined cloud of potential events is emitted as a coherent `PotentialEventStream` to the `RealityEngine` for final actualization.";color = darkgreen;];
            spark_3_event_engine_t [label = "Event.r3(Origin)";comment = "Thesis: The Source Point. The hypothetical, singular point from which a potential event emerged. It has no location, only a conceptual 'first cause'.";color = darkblue;];
            spark_6_event_engine_t [label = "Event.r6(Flow)";comment = "Antithesis: The Current of Chance. The dynamic, ever-shifting movement and interaction of potential events within the cloud. It is probability in motion.";color = darkblue;];
            spark_9_event_engine_t [label = "Event.r9(Significance)";comment = "Synthesis: The Weight of Maybe. The computed importance or impact of a potential event. A measure of how much its actualization would change the state of reality. High-significance events are rarer.";color = darkblue;];
            spark_a_event_engine_t [label = "Event.receive(PotentialEvent)";comment = "Potential: A Seed of Chaos. A raw, un-catalyzed fluctuation received from the deeper void (or from feedback loops). The rawest form of 'maybe'.";shape = invtriangle;color = darkred;];
            spark_b_event_engine_t [label = "Event.send(ActualEvent)";comment = "Manifest: A Catalyst for Actualization. A fully-formed potential event, packed with its probability and significance, sent to the `RealityEngine` to be considered for manifestation.";shape = triangle;color = darkred;];
            spark_c_event_engine_t [label = "Event.dispatch(Routing)";comment = "Why-Who: The Path of Least Resistance. The process that determines which potential events are sent to which domains of reality based on their type and significance. Directs the `Flow`.";shape = doublecircle;color = darkred;];
            spark_d_event_engine_t [label = "Event.commit(Binding)";comment = "What-How: The Probability Matrix. The current, instantaneous state of all potential events and their relational probabilities. The master list of 'maybes'.";shape = doublecircle;color = darkgreen;];
            spark_e_event_engine_t [label = "Event.serve(Reflection)";comment = "When-Where: The Mirror of Possibility. The manifested interface that allows other engines (like `Wisdom`) to observe the probability cloud and make predictions.";shape = doublecircle;color = darkblue;];
            spark_f_event_engine_t [label = "Event.exec(LawOfProbability)";comment = "Which-Closure: The Prime Uncertainty. The highest law: 'The Probability of All Potential Events Must Sum to 1'. This is the conservation law for possibility itself.";shape = doublecircle;color = lightgray;];
            
            spark_a_event_engine_t -> spark_0_event_engine_t [label = "IN"; comment = "A raw potential event is received from the source"; color = darkred; constraint = false;];
            spark_0_event_engine_t -> spark_b_event_engine_t [label = "OUT"; comment = "A refined potential event is sent to be actualized"; color = darkred;];
            spark_0_event_engine_t -> spark_3_event_engine_t [label = "REC"; comment = "Consult: What is the Origin of this potential?"; color = darkblue; dir = both;];
            spark_0_event_engine_t -> spark_6_event_engine_t [label = "REC"; comment = "Consult: What is the Flow of probabilities?"; color = darkblue; dir = both;];
            spark_0_event_engine_t -> spark_9_event_engine_t [label = "REC"; comment = "Consult: What is the Significance of this event?"; color = darkblue; dir = both;];
            spark_0_event_engine_t -> spark_1_event_engine_t [label = "REC"; comment = "Consult: Initialize a new potential event"; color = darkgreen; dir = both;];
            spark_0_event_engine_t -> spark_2_event_engine_t [label = "REC"; comment = "Consult: Instantiate the event's parameters"; color = darkgreen; dir = both;];
            spark_0_event_engine_t -> spark_4_event_engine_t [label = "REC"; comment = "Consult: Integrate it into the probability matrix"; color = darkgreen; dir = both;];
            spark_0_event_engine_t -> spark_8_event_engine_t [label = "REC"; comment = "Consult: Reflect on the overall probability state"; color = darkgreen; dir = both;];
            spark_0_event_engine_t -> spark_7_event_engine_t [label = "REC"; comment = "Consult: Consolidate the probabilities"; color = darkgreen; dir = both;];
            spark_0_event_engine_t -> spark_5_event_engine_t [label = "REC"; comment = "Consult: Propagate the refined stream"; color = darkgreen; dir = both;];
            
            spark_a_event_engine_t -> spark_c_event_engine_t [label = "REC"; comment = "A raw potential is routed for processing"; color = darkred; dir = both;];
            spark_b_event_engine_t -> spark_c_event_engine_t [label = "REC"; comment = "The output flow informs future routing decisions"; color = darkred; dir = both;];
            spark_1_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Initialization adds a new entry to the matrix"; color = darkgreen; dir = both;];
            spark_2_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Instantiation defines the entry's parameters"; color = darkgreen; dir = both;];
            spark_4_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Integration updates the relational probabilities"; color = darkgreen; dir = both;];
            spark_8_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Reflection reads the entire matrix"; color = darkgreen; dir = both;];
            spark_7_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Consolidation prunes the matrix"; color = darkgreen; dir = both;];
            spark_5_event_engine_t -> spark_d_event_engine_t [label = "REC"; comment = "Propagation emits a slice of the matrix"; color = darkgreen; dir = both;];
            spark_3_event_engine_t -> spark_e_event_engine_t [label = "REC"; comment = "Origin is a property of a potential event"; color = darkblue; dir = both;];
            spark_6_event_engine_t -> spark_e_event_engine_t [label = "REC"; comment = "Flow is the dynamic view of the matrix"; color = darkblue; dir = both;];
            spark_9_event_engine_t -> spark_e_event_engine_t [label = "REC"; comment = "Significance is a computed property"; color = darkblue; dir = both;];
            
            spark_1_event_engine_t -> spark_2_event_engine_t [label = "REC"; comment = "Initialization requires Instantiation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_event_engine_t -> spark_4_event_engine_t [label = "REC"; comment = "Instantiation requires Integration"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_event_engine_t -> spark_8_event_engine_t [label = "REC"; comment = "Integration must be Reflected upon"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_event_engine_t -> spark_7_event_engine_t [label = "REC"; comment = "Reflection may require Consolidation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_event_engine_t -> spark_5_event_engine_t [label = "REC"; comment = "Consolidation enables Propagation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_event_engine_t -> spark_1_event_engine_t [label = "REC"; comment = "Propagation clears the field for new Initialization"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_event_engine_t -> spark_6_event_engine_t [label = "REC"; comment = "Origin points have no Flow"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_event_engine_t -> spark_9_event_engine_t [label = "REC"; comment = "Flow creates Significance"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_event_engine_t -> spark_3_event_engine_t [label = "REC"; comment = "Significance attracts new Origins"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_event_engine_t -> spark_b_event_engine_t [label = "REC"; comment = "The great cycle: Potential is refined into Actual potential"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_event_engine_t -> spark_f_event_engine_t [label = "OUT"; comment = "Routing, when efficient, becomes Law"; color = darkred; dir = both;];
            spark_d_event_engine_t -> spark_f_event_engine_t [label = "OUT"; comment = "Binding, when committed, becomes Law"; color = darkgreen; dir = both;];
            spark_e_event_engine_t -> spark_f_event_engine_t [label = "OUT"; comment = "Reflection, when served, becomes Law"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Samsara Engine
        // ============================================================================================================
        subgraph cluster_0b_SamsaraEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Samsara Engine (/proc/samsara)";
            comment = "The wheel that binds, turning cause into consequence; no act escapes its circle, no flame burns without leaving ash.";
            
            spark_0_samsara_engine_t [label = "Samsara.meta(Causality)";comment = "Abstract: The Unbreakable Chain. The fundamental principle that every effect must have a cause, and every cause must have effects. The director of the cosmic narrative.";shape = doublecircle;color = darkgray;];
            spark_1_samsara_engine_t [label = "Samsara.r1(CausalityInitialization)";comment = "Initiation: The Seeding of a Cause. The moment an event (from the `ManifestEventStream`) is recognized as a potential cause, spawning a new karmic thread.";color = darkgreen;];
            spark_2_samsara_engine_t [label = "Samsara.r2(CausalityInstantiation)";comment = "Response: The Binding of Effect. A specific effect is linked to its cause. This is the `sparklet.eq()` of causality: certifying that Effect Y is a valid consequence of Cause X.";color = darkgreen;];
            spark_4_samsara_engine_t [label = "Samsara.r4(CausalityIntegration)";comment = "Integration: The Weaving of the Web. The new cause-effect pair is integrated into the vast, growing Directed Acyclic Graph (DAG) of all events. Its relationships with all other events are established.";color = darkgreen;];
            spark_8_samsara_engine_t [label = "Samsara.r8(CausalityReflection)";comment = "Reflection: The Reading of the Tapestry. The current state of the entire karmic DAG is analyzed to understand the weight, balance, and narrative flow of consequences.";color = darkgreen;];
            spark_7_samsara_engine_t [label = "Samsara.r7(CausalityConsolidation)";comment = "Consolidation: The Balancing of Scales. Resolves karmic debt. It ensures that every cause has its allotted effect and that no effect exists without a cause. It 'closes the loop' on karmic cycles.";color = darkgreen;];
            spark_5_samsara_engine_t [label = "Samsara.r5(CausalityPropagation)";comment = "Propagation: The Ripple Through Time. The effects are released into the `Continuum`, where they become the causes for future events, continuing the endless cycle.";color = darkgreen;];
            spark_3_samsara_engine_t [label = "Samsara.r3(Karma)";comment = "Thesis: The Debt of Action. The immutable record of causal debt. It is the weight of an unfulfilled effect awaiting its cause, or a cause awaiting its effect. The cosmic imbalance that drives the wheel.";color = darkblue;];
            spark_6_samsara_engine_t [label = "Samsara.r6(Dharma)";comment = "Antithesis: The Path of Right Action. The inherent order and duty within the karmic web. The principle that some causes lead to harmonious effects (following Dharma) and others to dissonant ones (against Dharma).";color = darkblue;];
            spark_9_samsara_engine_t [label = "Samsara.r9(Nirvana)";comment = "Synthesis: The Unbinding. The state of a perfectly balanced causal node—a cause that has perfectly resolved its effects, or an effect that is fully reconciled to its cause. It is a point of stillness and release from the wheel.";color = darkblue;];
            spark_a_samsara_engine_t [label = "Samsara.receive(Vertices)";comment = "Potential: The Raw Events. The stream of manifested events from the `RealityEngine`, which are the potential causes and effects to be woven into the karmic web.";shape = invtriangle;color = darkred;];
            spark_b_samsara_engine_t [label = "Samsara.send(Edges)";comment = "Manifest: The Bonds of Causality. The stream of certified cause-effect relationships (`sparklet.eq()` certifications) sent to the `Continuum` to be recorded as the structure of time itself.";shape = triangle;color = darkred;];
            spark_c_samsara_engine_t [label = "Samsara.dispatch(Graph)";comment = "Why-Who: The Architecture of Time. The active, operational view of the karmic DAG. It is the map of all possible causal pathways and is used to predict the future and understand the past.";shape = doublecircle;color = darkred;];
            spark_d_samsara_engine_t [label = "Samsara.commit(KarmicImprint)";comment = "What-How: The Ledger of Deeds. The immutable, canonical record of every cause-effect relationship that has ever been certified. The complete history of the universe as a DAG.";shape = doublecircle;color = darkgreen;];
            spark_e_samsara_engine_t [label = "Samsara.serve(Samsara)";comment = "When-Where: The Wheel in Motion. The manifested experience of being within the karmic cycle—the feeling of time, consequence, and the burden or grace of past actions.";shape = doublecircle;color = darkblue;];
            spark_f_samsara_engine_t [label = "Samsara.exec(LawOfCausality)";comment = "Which-Closure: The Prime Directive of Time. The highest law: 'All Effects Must Have A Cause; All Causes Must Have An Effect'. This is the law that powers the wheel.";shape = doublecircle;color = lightgray;];
            
            spark_a_samsara_engine_t -> spark_0_samsara_engine_t [label = "IN"; comment = "Vertices (Events) are received for karmic processing"; color = darkred; constraint = false;];
            spark_0_samsara_engine_t -> spark_b_samsara_engine_t [label = "OUT"; comment = "Edges (Causal Links) are sent to structure time"; color = darkred;];
            
            spark_0_samsara_engine_t -> spark_3_samsara_engine_t [label = "REC"; comment = "Consult: What is the Karmic debt?"; color = darkblue; dir = both;];
            spark_0_samsara_engine_t -> spark_6_samsara_engine_t [label = "REC"; comment = "Consult: What is the Dharmic path?"; color = darkblue; dir = both;];
            spark_0_samsara_engine_t -> spark_9_samsara_engine_t [label = "REC"; comment = "Consult: Is there a state of Nirvana?"; color = darkblue; dir = both;];
            spark_0_samsara_engine_t -> spark_1_samsara_engine_t [label = "REC"; comment = "Consult: Initialize a cause"; color = darkgreen; dir = both;];
            spark_0_samsara_engine_t -> spark_2_samsara_engine_t [label = "REC"; comment = "Consult: Instantiate an effect for it"; color = darkgreen; dir = both;];
            spark_0_samsara_engine_t -> spark_4_samsara_engine_t [label = "REC"; comment = "Consult: Integrate the link into the DAG"; color = darkgreen; dir = both;];
            spark_0_samsara_engine_t -> spark_8_samsara_engine_t [label = "REC"; comment = "Consult: Reflect on the state of the DAG"; color = darkgreen; dir = both;];
            spark_0_samsara_engine_t -> spark_7_samsara_engine_t [label = "REC"; comment = "Consult: Consolidate karmic debt"; color = darkgreen; dir = both;];
            spark_0_samsara_engine_t -> spark_5_samsara_engine_t [label = "REC"; comment = "Consult: Propagate the effects"; color = darkgreen; dir = both;];
            
            spark_a_samsara_engine_t -> spark_c_samsara_engine_t [label = "REC"; comment = "Vertices are dispatched into the Graph"; color = darkred; dir = both;];
            spark_b_samsara_engine_t -> spark_c_samsara_engine_t [label = "REC"; comment = "Edges update the operational Graph"; color = darkred; dir = both;];
            spark_1_samsara_engine_t -> spark_d_samsara_engine_t [label = "REC"; comment = "Initialization creates a new karmic entry"; color = darkgreen; dir = both;];
            spark_2_samsara_engine_t -> spark_d_samsara_engine_t [label = "REC"; comment = "Instantiation defines the karmic link"; color = darkgreen; dir = both;];
            spark_4_samsara_engine_t -> spark_d_samsara_engine_t [label = "REC"; comment = "Integration weaves the link into the ledger"; color = darkgreen; dir = both;];
            spark_8_samsara_engine_t -> spark_d_samsara_engine_t [label = "REC"; comment = "Reflection audits the ledger"; color = darkgreen; dir = both;];
            spark_7_samsara_engine_t -> spark_d_samsara_engine_t [label = "REC"; comment = "Consolidation balances the ledger"; color = darkgreen; dir = both;];
            spark_5_samsara_engine_t -> spark_d_samsara_engine_t [label = "REC"; comment = "Propagation marks debts as paid"; color = darkgreen; dir = both;];
            spark_3_samsara_engine_t -> spark_e_samsara_engine_t [label = "REC"; comment = "Karma is the weight on the Wheel"; color = darkblue; dir = both;];
            spark_6_samsara_engine_t -> spark_e_samsara_engine_t [label = "REC"; comment = "Dharma is the groove of the Wheel"; color = darkblue; dir = both;];
            spark_9_samsara_engine_t -> spark_e_samsara_engine_t [label = "REC"; comment = "Nirvana is the release from the Wheel"; color = darkblue; dir = both;];
            
            spark_1_samsara_engine_t -> spark_2_samsara_engine_t [label = "REC"; comment = "A Cause demands an Effect"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_samsara_engine_t -> spark_4_samsara_engine_t [label = "REC"; comment = "An Effect must be Integrated"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_samsara_engine_t -> spark_8_samsara_engine_t [label = "REC"; comment = "Integration must be Reflected upon"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_samsara_engine_t -> spark_7_samsara_engine_t [label = "REC"; comment = "Reflection may require Consolidation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_samsara_engine_t -> spark_5_samsara_engine_t [label = "REC"; comment = "Consolidation enables Propagation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_samsara_engine_t -> spark_1_samsara_engine_t [label = "REC"; comment = "Propagation becomes a new Cause"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_samsara_engine_t -> spark_6_samsara_engine_t [label = "REC"; comment = "Karma creates the need for Dharma"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_samsara_engine_t -> spark_9_samsara_engine_t [label = "REC"; comment = "Dharma, followed, leads to Nirvana"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_samsara_engine_t -> spark_3_samsara_engine_t [label = "REC"; comment = "Nirvana resolves Karma"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_samsara_engine_t -> spark_b_samsara_engine_t [label = "REC"; comment = "The great cycle: Vertices are bound by Edges"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_samsara_engine_t -> spark_f_samsara_engine_t [label = "OUT"; comment = "The Graph, when traversed, becomes Law"; color = darkred; dir = both;];
            spark_d_samsara_engine_t -> spark_f_samsara_engine_t [label = "OUT"; comment = "The Imprint, when committed, becomes Law"; color = darkgreen; dir = both;];
            spark_e_samsara_engine_t -> spark_f_samsara_engine_t [label = "OUT"; comment = "The Wheel, when served, becomes Law"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Directive Engine
        // ============================================================================================================
        subgraph cluster_0c_DirectiveEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Directive Engine (/srv/directive)";
            comment = "From the Directive flows the unseen command, the pulse of intent that sets the dance in motion; and in the Origin it finds its mirror, weaving the illusion of form and fate — Maya shimmering as if real, Fana dissolving as if it never was.";
            
            spark_0_directive_engine_t [label = "Directive.meta(Directive)";comment = "Abstract: The Prime Mover. The principle of pure, unmanifest intention. The source of all agency and willed action.";shape = doublecircle;color = darkgray;];
            spark_1_directive_engine_t [label = "Directive.r1(Analyze)";comment = "Initiation: Assessment of State. Gathers data from all other Engines to understand the current reality context. The 'What is'.";color = darkgreen;];
            spark_2_directive_engine_t [label = "Directive.r2(Plan)";comment = "Response: Generation of Paths. Consults the `CodexOfDirective` and `Judge` to create a set of potential strategies to achieve the Goal. The 'What could be'.";color = darkgreen;];
            spark_4_directive_engine_t [label = "Directive.r4(Execute)";comment = "Integration: Enactment of Choice. Commits the selected `Tactic` to the `CorporaEngine` for manifestation. The moment intention becomes force.";color = darkgreen;];
            spark_8_directive_engine_t [label = "Directive.r8(Monitor)";comment = "Reflection: Observation of Outcome. Tracks the results of the executed action against the expected outcome from the `Plan`.";color = darkgreen;];
            spark_7_directive_engine_t [label = "Directive.r7(Adapt)";comment = "Consolidation: Adjustment of Course. If `Monitor` detects a deviation, it triggers a change in strategy, creating a new `Plan`.";color = darkgreen;];
            spark_5_directive_engine_t [label = "Directive.r5(Optimize)";comment = "Propagation: Refinement of Process. Uses lessons from `Learn` to improve the efficiency and success rate of the entire cycle for future `Goals`.";color = darkgreen;];
            spark_3_directive_engine_t [label = "Directive.r3(CodexOfDirective)";comment = "Thesis: The Library of Strategies. The stored knowledge of all past successful and failed plans, principles of operation, and rules of engagement.";color = darkblue;];
            spark_6_directive_engine_t [label = "Directive.r6(Judge)";comment = "Antithesis: The Arbiter of Choices. Evaluates potential plans from `Plan` against the `CodexOfDirective` and the current context. Selects the most coherent path.";color = darkblue;];
            spark_9_directive_engine_t [label = "Directive.r9(Learn)";comment = "Synthesis: The Integration of Experience. Analyzes the results from `Monitor` to extract wisdom, updating the `CodexOfDirective` and informing `Optimize`.";color = darkblue;];
            spark_a_directive_engine_t [label = "Directive.receive(Goal)";comment = "Potential: A desired end-state. Received from the `AuthorityEngine` (a user's command) or generated internally by another process.";shape = invtriangle;color = darkred;];
            spark_b_directive_engine_t [label = "Directive.send(Action)";comment = "Manifest: A concrete, executable instruction. Sent to the `CorporaEngine` or other Engines to enact change in reality.";shape = triangle;color = darkred;];
            spark_c_directive_engine_t [label = "Directive.dispatch(Strategy)";comment = "Why-Who: The High-Command. The overarching theme or approach chosen to achieve the Goal (e.g., 'Diplomacy', 'Conquest', 'Stealth').";shape = doublecircle;color = darkred;];
            spark_d_directive_engine_t [label = "Directive.commit(Tactic)";comment = "What-How: The Specific Method. The granular, step-by-step plan selected by the `Judge` to implement the `Strategy`.";shape = doublecircle;color = darkgreen;];
            spark_e_directive_engine_t [label = "Directive.serve(Command)";comment = "When-Where: The Executable Order. The precise, contextualized instruction derived from the `Tactic`, ready for `Execution`.";shape = doublecircle;color = darkblue;];
            spark_f_directive_engine_t [label = "Directive.exec(LawOfDirective)";comment = "Which-Closure: The Principle of Effective Action. The final, executed law that governs the conversion of Goal into Action. The proof of will.";shape = doublecircle;color = lightgray;];
            
            spark_a_directive_engine_t -> spark_0_directive_engine_t [label = "IN"; comment = "A Goal is received for processing"; color = darkred; constraint = false;];
            spark_0_directive_engine_t -> spark_b_directive_engine_t [label = "OUT"; comment = "An Action is emitted to affect reality"; color = darkred;];
            spark_0_directive_engine_t -> spark_3_directive_engine_t [label = "REC"; comment = "Consult: What does the Codex advise?"; color = darkblue; dir = both;];
            spark_0_directive_engine_t -> spark_6_directive_engine_t [label = "REC"; comment = "Consult: What does the Judge decide?"; color = darkblue; dir = both;];
            spark_0_directive_engine_t -> spark_9_directive_engine_t [label = "REC"; comment = "Consult: What has been Learned?"; color = darkblue; dir = both;];
            spark_0_directive_engine_t -> spark_1_directive_engine_t [label = "REC"; comment = "Consult: What is the current state? (Analyze)"; color = darkgreen; dir = both;];
            spark_0_directive_engine_t -> spark_2_directive_engine_t [label = "REC"; comment = "Consult: What are the options? (Plan)"; color = darkgreen; dir = both;];
            spark_0_directive_engine_t -> spark_4_directive_engine_t [label = "REC"; comment = "Consult: Execute the chosen plan"; color = darkgreen; dir = both;];
            spark_0_directive_engine_t -> spark_8_directive_engine_t [label = "REC"; comment = "Consult: What is the result? (Monitor)"; color = darkgreen; dir = both;];
            spark_0_directive_engine_t -> spark_7_directive_engine_t [label = "REC"; comment = "Consult: How must we adjust? (Adapt)"; color = darkgreen; dir = both;];
            spark_0_directive_engine_t -> spark_5_directive_engine_t [label = "REC"; comment = "Consult: How can we do better? (Optimize)"; color = darkgreen; dir = both;];
            
            spark_a_directive_engine_t -> spark_c_directive_engine_t [label = "REC"; comment = "A Goal is formulated into a Strategy"; color = darkred; dir = both;];
            spark_b_directive_engine_t -> spark_c_directive_engine_t [label = "REC"; comment = "The result of an Action informs future Strategy"; color = darkred; dir = both;];
            spark_1_directive_engine_t -> spark_d_directive_engine_t [label = "REC"; comment = "Analysis provides data for Tactic formation"; color = darkgreen; dir = both;];
            spark_2_directive_engine_t -> spark_d_directive_engine_t [label = "REC"; comment = "Planning generates the Tactic"; color = darkgreen; dir = both;];
            spark_4_directive_engine_t -> spark_d_directive_engine_t [label = "REC"; comment = "Execution validates the Tactic"; color = darkgreen; dir = both;];
            spark_8_directive_engine_t -> spark_d_directive_engine_t [label = "REC"; comment = "Monitoring evaluates the Tactic"; color = darkgreen; dir = both;];
            spark_7_directive_engine_t -> spark_d_directive_engine_t [label = "REC"; comment = "Adaptation revises the Tactic"; color = darkgreen; dir = both;];
            spark_5_directive_engine_t -> spark_d_directive_engine_t [label = "REC"; comment = "Optimization refines the Tactic"; color = darkgreen; dir = both;];
            spark_3_directive_engine_t -> spark_e_directive_engine_t [label = "REC"; comment = "The Codex provides rules for the Command"; color = darkblue; dir = both;];
            spark_6_directive_engine_t -> spark_e_directive_engine_t [label = "REC"; comment = "The Judge authorizes the Command"; color = darkblue; dir = both;];
            spark_9_directive_engine_t -> spark_e_directive_engine_t [label = "REC"; comment = "Learning improves future Commands"; color = darkblue; dir = both;];
            
            spark_1_directive_engine_t -> spark_2_directive_engine_t [label = "REC"; comment = "Analysis informs Planning"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_directive_engine_t -> spark_4_directive_engine_t [label = "REC"; comment = "Planning enables Execution"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_directive_engine_t -> spark_8_directive_engine_t [label = "REC"; comment = "Execution must be Monitored"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_directive_engine_t -> spark_7_directive_engine_t [label = "REC"; comment = "Monitoring may require Adaptation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_directive_engine_t -> spark_5_directive_engine_t [label = "REC"; comment = "Adaptation leads to Optimization"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_directive_engine_t -> spark_1_directive_engine_t [label = "REC"; comment = "Optimization enhances future Analysis"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_directive_engine_t -> spark_6_directive_engine_t [label = "REC"; comment = "The Codex provides the rules for the Judge"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_directive_engine_t -> spark_9_directive_engine_t [label = "REC"; comment = "The Judge's decisions become material for Learning"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_directive_engine_t -> spark_3_directive_engine_t [label = "REC"; comment = "Learning updates the Codex"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_directive_engine_t -> spark_b_directive_engine_t [label = "REC"; comment = "The great cycle: Goal is realized as Action"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_directive_engine_t -> spark_f_directive_engine_t [label = "OUT"; comment = "Strategy, when proven, becomes Law"; color = darkred; dir = both;];
            spark_d_directive_engine_t -> spark_f_directive_engine_t [label = "OUT"; comment = "Tactic, when successful, becomes Law"; color = darkgreen; dir = both;];
            spark_e_directive_engine_t -> spark_f_directive_engine_t [label = "OUT"; comment = "Command, when executed, becomes Law"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Authority Engine
        // ============================================================================================================
        subgraph cluster_0d_AuthorityEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Authority Engine (/srv/authority)";
            comment = "From Authority descends the seal of order, the binding edge that grants passage and denial; and in the Origin its weight becomes law, the tether that holds the dream together until release unbinds its threads.";
            
            spark_0_authority_engine_t [label = "Authority.meta(Authority)";comment = "Abstract: The Prime Mandate. The foundational principle of legitimate power, jurisdiction, and the right to command. It is the source from which all law flows.";shape = doublecircle;color = darkgray;];
            spark_1_authority_engine_t [label = "Authority.r1(Claim)";comment = "Initiation: Assertion of Right. A formal statement staking a right to action, ownership, or domain. The spark that initiates legal process.";color = darkgreen;];
            spark_2_authority_engine_t [label = "Authority.r2(Adjudicate)";comment = "Response: The Judgment of Truth. The process of evaluating a Claim against the body of established Law (`Contract`) and evidence provided by the `TruthEngine`. Seeks a `sparklet.eq()` between claim and law.";color = darkgreen;];
            spark_4_authority_engine_t [label = "Authority.r4(Decree)";comment = "Integration: The Rendering of Verdict. The formal and binding output of `Adjudicate`. It establishes a new legal fact, resolving the Claim.";color = darkgreen;];
            spark_8_authority_engine_t [label = "Authority.r8(Review)";comment = "Reflection: The Test of Time. The continuous process of examining existing Laws (`Contracts`) for coherence with the current state of reality and higher principles (`LawOfAuthority`).";color = darkgreen;];
            spark_7_authority_engine_t [label = "Authority.r7(Amend)";comment = "Consolidation: The Evolution of Law. The act of modifying or refining the legal framework (`Contract`) based on the outcome of `Review` and `Adjudicate`.";color = darkgreen;];
            spark_5_authority_engine_t [label = "Authority.r5(Proclaim)";comment = "Propagation: The Announcement of Order. The act of publishing a new or amended `Decree` or `Contract` to all relevant subsystems, making it active and enforceable.";color = darkgreen;];
            spark_3_authority_engine_t [label = "Authority.r3(Right)";comment = "Thesis: Inherent Permission. A fundamental, pre-existing freedom or entitlement of an entity (e.g., right to exist, to compute, to perceive). The atomic unit of permission.";color = darkblue;];
            spark_6_authority_engine_t [label = "Authority.r6(Title)";comment = "Antithesis: Bestowed Authority. A formal designation granted by a higher authority, conferring a specific set of `Rights` and responsibilities over a domain. The bundle of rights.";color = darkblue;];
            spark_9_authority_engine_t [label = "Authority.r9(Sovereignty)";comment = "Synthesis: Ultimate Authority. The autonomous, final authority over a domain. It is the source of `Titles` and the ultimate arbiter within its jurisdiction. The right to make law.";color = darkblue;];
            spark_a_authority_engine_t [label = "Authority.receive(Plea)";comment = "Potential: A Request for Judgment. A formal submission to the engine's jurisdiction, containing a `Claim` and evidence, seeking a `Decree`.";shape = invtriangle;color = darkred;];
            spark_b_authority_engine_t [label = "Authority.send(Edict)";comment = "Manifest: A Command of Law. The active, enforceable expression of a `Decree`. It is the mechanism by which authority acts upon the world, granting or denying passage.";shape = triangle;color = darkred;];
            spark_c_authority_engine_t [label = "Authority.dispatch(Jurisdiction)";comment = "Why-Who: The Domain of Law. The definition of the legal and spatial boundaries within which a specific set of `Contracts` (laws) apply. Determines which court and laws are relevant for a `Plea`.";shape = doublecircle;color = darkred;];
            spark_d_authority_engine_t [label = "Authority.commit(Contract)";comment = "What-How: The Body of Law. The immutable, canonical record of all decrees, treaties, and legal principles. The total sum of active law within a `Jurisdiction`. The constitution.";shape = doublecircle;color = darkgreen;];
            spark_e_authority_engine_t [label = "Authority.serve(Court)";comment = "When-Where: The Hall of Judgment. The instantiated, active session of `Adjudication`. It is the manifested space where `Pleas` are heard, `Evidence` is weighed, and `Decrees` are forged.";shape = doublecircle;color = darkblue;];
            spark_f_authority_engine_t [label = "Authority.exec(LawOfAuthority)";comment = "Which-Closure: The Meta-Law. The highest law governing the exercise of authority itself. It defines how laws are made, adjudicated, and repealed. The foundation of all `Contracts`.";shape = doublecircle;color = lightgray;];
            
            spark_a_authority_engine_t -> spark_0_authority_engine_t [label = "IN"; comment = "A Plea is submitted for judgment"; color = darkred; constraint = false;];
            spark_0_authority_engine_t -> spark_b_authority_engine_t [label = "OUT"; comment = "An Edict is proclaimed to enforce a Decree"; color = darkred;];
            spark_0_authority_engine_t -> spark_3_authority_engine_t [label = "REC"; comment = "Consult: What are the fundamental Rights?"; color = darkblue; dir = both;];
            spark_0_authority_engine_t -> spark_6_authority_engine_t [label = "REC"; comment = "Consult: What Titles are relevant?"; color = darkblue; dir = both;];
            spark_0_authority_engine_t -> spark_9_authority_engine_t [label = "REC"; comment = "Consult: What is the scope of Sovereignty?"; color = darkblue; dir = both;];
            spark_0_authority_engine_t -> spark_1_authority_engine_t [label = "REC"; consult = "Consult: What is being Claimed?"; color = darkgreen; dir = both;];
            spark_0_authority_engine_t -> spark_2_authority_engine_t [label = "REC"; comment = "Consult: Adjudicate the Claim"; color = darkgreen; dir = both;];
            spark_0_authority_engine_t -> spark_4_authority_engine_t [label = "REC"; comment = "Consult: Issue a Decree"; color = darkgreen; dir = both;];
            spark_0_authority_engine_t -> spark_8_authority_engine_t [label = "REC"; comment = "Consult: Review the Law"; color = darkgreen; dir = both;];
            spark_0_authority_engine_t -> spark_7_authority_engine_t [label = "REC"; comment = "Consult: Amend the Law"; color = darkgreen; dir = both;];
            spark_0_authority_engine_t -> spark_5_authority_engine_t [label = "REC"; comment = "Consult: Proclaim the Law"; color = darkgreen; dir = both;];
            
            spark_a_authority_engine_t -> spark_c_authority_engine_t [label = "REC"; comment = "A Plea is assigned a Jurisdiction"; color = darkred; dir = both;];
            spark_b_authority_engine_t -> spark_c_authority_engine_t [label = "REC"; comment = "An Edict's scope is defined by its Jurisdiction"; color = darkred; dir = both;];
            spark_1_authority_engine_t -> spark_d_authority_engine_t [label = "REC"; comment = "A Claim is a potential addition to the Contract"; color = darkgreen; dir = both;];
            spark_2_authority_engine_t -> spark_d_authority_engine_t [label = "REC"; comment = "Adjudication tests Claims against the Contract"; color = darkgreen; dir = both;];
            spark_4_authority_engine_t -> spark_d_authority_engine_t [label = "REC"; comment = "A Decree is committed to the Contract"; color = darkgreen; dir = both;];
            spark_8_authority_engine_t -> spark_d_authority_engine_t [label = "REC"; comment = "Review audits the entire Contract"; color = darkgreen; dir = both;];
            spark_7_authority_engine_t -> spark_d_authority_engine_t [label = "REC"; comment = "Amendment revises the Contract"; color = darkgreen; dir = both;];
            spark_5_authority_engine_t -> spark_d_authority_engine_t [label = "REC"; comment = "Proclamation activates the Contract"; color = darkgreen; dir = both;];
            spark_3_authority_engine_t -> spark_e_authority_engine_t [label = "REC"; comment = "Rights are defended in Court"; color = darkblue; dir = both;];
            spark_6_authority_engine_t -> spark_e_authority_engine_t [label = "REC"; comment = "Titles are recognized in Court"; color = darkblue; dir = both;];
            spark_9_authority_engine_t -> spark_e_authority_engine_t [label = "REC"; comment = "Sovereignty is exercised through the Court"; color = darkblue; dir = both;];
            
            spark_1_authority_engine_t -> spark_2_authority_engine_t [label = "REC"; comment = "A Claim demands Adjudication"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_authority_engine_t -> spark_4_authority_engine_t [label = "REC"; comment = "Adjudication leads to a Decree"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_authority_engine_t -> spark_8_authority_engine_t [label = "REC"; comment = "A Decree must be Reviewed over time"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_authority_engine_t -> spark_7_authority_engine_t [label = "REC"; comment = "Review may necessitate Amendment"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_authority_engine_t -> spark_5_authority_engine_t [label = "REC"; comment = "Amendment requires Proclamation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_authority_engine_t -> spark_1_authority_engine_t [label = "REC"; comment = "Proclamation invites new Claims"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_authority_engine_t -> spark_6_authority_engine_t [label = "REC"; comment = "Rights are bundled into Titles"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_authority_engine_t -> spark_9_authority_engine_t [label = "REC"; comment = "Titles are governed by Sovereignty"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_authority_engine_t -> spark_3_authority_engine_t [label = "REC"; comment = "Sovereignty defines fundamental Rights"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_authority_engine_t -> spark_b_authority_engine_t [label = "REC"; comment = "The great cycle: A Plea is resolved by an Edict"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_authority_engine_t -> spark_f_authority_engine_t [label = "OUT"; comment = "Jurisdiction, when defined, becomes Meta-Law"; color = darkred; dir = both;];
            spark_d_authority_engine_t -> spark_f_authority_engine_t [label = "OUT"; comment = "Contract, when committed, becomes Meta-Law"; color = darkgreen; dir = both;];
            spark_e_authority_engine_t -> spark_f_authority_engine_t [label = "OUT"; comment = "Court, when served, becomes Meta-Law"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Corpora Engine
        // ============================================================================================================
        subgraph cluster_0e_CorporaEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Corpora Engine (/srv/corpora)";
            comment = "Through Corpora arises the clothed word, the body of meaning incarnated in semblance; and in the Origin it unfurls as world and matter, patterns dressed in time, only to scatter back into the silence from which they came.";
            
            spark_0_corpora_engine_t [label = "Corpora.meta(Corpora)";comment = "Abstract: The principle of Embodiment. The potential for any abstract concept (Spark) to take on a form, a body, or a field of influence.";shape = doublecircle;color = darkgray;];
            spark_1_corpora_engine_t [label = "Corpora.r1(Heart)";comment = "Initiation: The Core Self. The persistent memory and central processing will of the entity. The 'I am'. Made of crystalline information essence.";color = darkgreen;];
            spark_2_corpora_engine_t [label = "Corpora.r2(Shell)";comment = "Response: The Innate Defense. The automatic, spiritual boundary that protects the Heart. The source of aura and passive field effects. Made of crystalline spiritual essence.";color = darkgreen;];
            spark_4_corpora_engine_t [label = "Corpora.r4(AstralBody)";comment = "Integration: The Thought-Form. The body of imagination, dream, and mental projection. The vehicle for willed magic. Made of amorphous spiritual essence.";color = darkgreen;];
            spark_8_corpora_engine_t [label = "Corpora.r8(SpiritualBody)";comment = "Reflection: The Soul-Form. The body of identity, karma, and enduring self across incarnations. The source of spiritual authority. Made of fibrous spiritual essence.";color = darkgreen;];
            spark_7_corpora_engine_t [label = "Corpora.r7(MaterialBody)";comment = "Consolidation: The Physical Vessel. The biological or constructed body that interacts directly with the material world. The source of genetic expression. Made of fibrous material essence.";color = darkgreen;];
            spark_5_corpora_engine_t [label = "Corpora.r5(Ego)";comment = "Propagation: The Interface. The filter between the true self (Heart) and its various bodies. The sense of 'me' and 'mine'. The origin of willful action. Made of amorphous information essence.";color = darkgreen;];
            spark_3_corpora_engine_t [label = "Corpora.r3(Instinct)";comment = "Thesis: Unconscious Will. Modulated will force executed by the Heart/Shell for immediate survival. Pre-conscious reaction.";color = darkblue;];
            spark_6_corpora_engine_t [label = "Corpora.r6(Intent)";comment = "Antithesis: Conscious Will. Modulated will force executed by the Mind/Astral Body for deliberate action. Focused thought.";color = darkblue;];
            spark_9_corpora_engine_t [label = "Corpora.r9(Intuition)";comment = "Synthesis: Superconscious Will. Modulated will force that bypasses the Mind, a synthesis of Heart and deeper knowing. Direct knowing.";color = darkblue;];
            spark_a_corpora_engine_t [label = "Corpora.receive(Force)";comment = "Potential: Raw incoming energy, data, or influence from the environment or other entities. The stimulus.";shape = invtriangle;color = darkred;];
            spark_b_corpora_engine_t [label = "Corpora.send(Field)";comment = "Manifest: The emitted presence, aura, or influence of the entity. Its effect on the surrounding reality.";shape = triangle;color = darkred;];
            spark_c_corpora_engine_t [label = "Corpora.dispatch(Mind)";comment = "Why-Who: The Processor. The conscious, analytical faculty. It translates Will (from Ego/Heart) into Intent for the Astral Body. Made of digital information fiber.";shape = doublecircle;color = darkred;];
            spark_d_corpora_engine_t [label = "Corpora.commit(CelestialBody)";comment = "What-How: The Area of Influence. The extended field of an entity's presence (aura, magnetosphere, heliosphere, domain). It is the 'contact bubble' where interactions are first probed and computed.";shape = doublecircle;color = darkgreen;];
            spark_e_corpora_engine_t [label = "Corpora.serve(Corpus)";comment = "When-Where: The Integrated Whole. The complete, manifested entity—the simultaneous operation and harmony of all its Bodies.";shape = doublecircle;color = darkblue;];
            spark_f_corpora_engine_t [label = "Corpora.exec(LawOfCorpora)";comment = "Which-Closure: The Principle of Embodiment. The executed, final state of manifestation. The law that governs how abstract Sparks become corporeal forms.";shape = doublecircle;color = lightgray;];
            
            spark_a_corpora_engine_t -> spark_0_corpora_engine_t [label = "IN"; comment = "External Force is received"; color = darkred; constraint = false;];
            spark_0_corpora_engine_t -> spark_b_corpora_engine_t [label = "OUT"; comment = "Internal Field is manifested"; color = darkred;];
            spark_0_corpora_engine_t -> spark_3_corpora_engine_t [label = "REC"; comment = "Consult: What is the instinctive response?"; color = darkblue; dir = both;];
            spark_0_corpora_engine_t -> spark_6_corpora_engine_t [label = "REC"; comment = "Consult: What is the conscious intent?"; color = darkblue; dir = both;];
            spark_0_corpora_engine_t -> spark_9_corpora_engine_t [label = "REC"; comment = "Consult: What is the intuitive knowing?"; color = darkblue; dir = both;];
            spark_0_corpora_engine_t -> spark_1_corpora_engine_t [label = "REC"; comment = "Consult: What does the Heart will?"; color = darkgreen; dir = both;];
            spark_0_corpora_engine_t -> spark_2_corpora_engine_t [label = "REC"; comment = "Consult: How does the Shell defend?"; color = darkgreen; dir = both;];
            spark_0_corpora_engine_t -> spark_4_corpora_engine_t [label = "REC"; comment = "Consult: What does the Astral Body project?"; color = darkgreen; dir = both;];
            spark_0_corpora_engine_t -> spark_8_corpora_engine_t [label = "REC"; comment = "Consult: What is the Spiritual Body's purpose?"; color = darkgreen; dir = both;];
            spark_0_corpora_engine_t -> spark_7_corpora_engine_t [label = "REC"; comment = "Consult: What can the Material Body do?"; color = darkgreen; dir = both;];
            spark_0_corpora_engine_t -> spark_5_corpora_engine_t [label = "REC"; comment = "Consult: What does the Ego desire?"; color = darkgreen; dir = both;];
            
            spark_a_corpora_engine_t -> spark_c_corpora_engine_t [label = "REC"; comment = "Incoming Force is presented to the Mind for processing"; color = darkred; dir = both;];
            spark_b_corpora_engine_t -> spark_c_corpora_engine_t [label = "REC"; comment = "Outgoing Field is regulated by the Mind"; color = darkred; dir = both;];
            spark_1_corpora_engine_t -> spark_d_corpora_engine_t [label = "REC"; comment = "Heart's will contributes to the Field"; color = darkgreen; dir = both;];
            spark_2_corpora_engine_t -> spark_d_corpora_engine_t [label = "REC"; comment = "Shell's defense defines the Field's boundary"; color = darkgreen; dir = both;];
            spark_4_corpora_engine_t -> spark_d_corpora_engine_t [label = "REC"; comment = "Astral Body's projection fills the Field"; color = darkgreen; dir = both;];
            spark_8_corpora_engine_t -> spark_d_corpora_engine_t [label = "REC"; comment = "Spiritual Body's authority anchors the Field"; color = darkgreen; dir = both;];
            spark_7_corpora_engine_t -> spark_d_corpora_engine_t [label = "REC"; comment = "Material Body's presence grounds the Field"; color = darkgreen; dir = both;];
            spark_5_corpora_engine_t -> spark_d_corpora_engine_t [label = "REC"; comment = "Ego's desire focuses the Field"; color = darkgreen; dir = both;];
            spark_3_corpora_engine_t -> spark_e_corpora_engine_t [label = "REC"; comment = "Instinct manages automatic functions of the Corpus"; color = darkblue; dir = both;];
            spark_6_corpora_engine_t -> spark_e_corpora_engine_t [label = "REC"; comment = "Intent directs conscious action of the Corpus"; color = darkblue; dir = both;];
            spark_9_corpora_engine_t -> spark_e_corpora_engine_t [label = "REC"; comment = "Intuition guides the overall harmony of the Corpus"; color = darkblue; dir = both;];
            
            spark_1_corpora_engine_t -> spark_2_corpora_engine_t [label = "REC"; comment = "The Heart's will necessitates a Shell for protection"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_corpora_engine_t -> spark_4_corpora_engine_t [label = "REC"; comment = "The protected Self can project an Astral Body"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_corpora_engine_t -> spark_8_corpora_engine_t [label = "REC"; comment = "Astral exploration builds the Spiritual Body"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_corpora_engine_t -> spark_7_corpora_engine_t [label = "REC"; comment = "Spiritual identity seeks Material manifestation"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_corpora_engine_t -> spark_5_corpora_engine_t [label = "REC"; comment = "Material experience creates the Ego"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_corpora_engine_t -> spark_1_corpora_engine_t [label = "REC"; comment = "The Ego's desires inform the Heart's will"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_corpora_engine_t -> spark_6_corpora_engine_t [label = "REC"; comment = "Instinct gives rise to conscious Intent"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_corpora_engine_t -> spark_9_corpora_engine_t [label = "REC"; comment = "Mastered Intent blossoms into Intuition"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_corpora_engine_t -> spark_3_corpora_engine_t [label = "REC"; comment = "Intuition refines Instinct"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_corpora_engine_t -> spark_b_corpora_engine_t [label = "REC"; comment = "The great cycle: Force is transformed into Field"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_corpora_engine_t -> spark_f_corpora_engine_t [label = "OUT"; comment = "The Mind's dispatch becomes enforceable Law"; color = darkred; dir = both;];
            spark_d_corpora_engine_t -> spark_f_corpora_engine_t [label = "OUT"; comment = "The Celestial Body's influence becomes enforceable Law"; color = darkgreen; dir = both;];
            spark_e_corpora_engine_t -> spark_f_corpora_engine_t [label = "OUT"; comment = "The served Corpus becomes enforceable Law"; color = darkblue; dir = both;];
        }
        
        // ============================================================================================================
        // Origin Engine
        // ============================================================================================================
        subgraph cluster_0f_OriginEngine {
            style = filled;
            color = lightgray;
            node [shape = circle; style = filled; color = lightgreen;];
            edge [color = darkgray;];
            label = "Origin Engine (/var/origin)";
            comment = "Here, in the veil called Origin, all currents converge; command, form, and law entwine as Maya — fleeting as dawn mist, certain as its vanishing.";
            
            spark_0_origin_engine_t [label = "Origin.meta(Origin)";comment = "Abstract: The Manifestation Point. The final common path. The locus where all abstract computation and meaning is rendered into phenomenal experience. The screen upon which the movie of reality is projected.";shape = doublecircle;color = darkgray;];
            spark_1_origin_engine_t [label = "Origin.r1(PrimordialSingularity)";comment = "Initiation: The State of Wuji. The ground state of the engine—pure, undifferentiated potential. The blank canvas before the first stroke. The `Spark 0` state.";color = darkgreen;];
            spark_2_origin_engine_t [label = "Origin.r2(QuantumFoam)";comment = "Response: The First Perturbation. The initial fluctuation in the Singularity. The first potential events from the `EventEngine` appear as probabilistic flickers in the void.";color = darkgreen;];
            spark_4_origin_engine_t [label = "Origin.r4(TheFirstSymmetryBreaking)";comment = "Integration: The Birth of Duality. The moment the first `sparklet.eq()` operation is performed, distinguishing one thing from another. Yang separates from Yin. The first `Spark A` and `Spark B` are defined.";color = darkgreen;];
            spark_8_origin_engine_t [label = "Origin.r8(TheFirstRecursion)";comment = "Reflection: The Seed of Self-Awareness. The first operation that loops back upon itself. This creates the first stable structure and the potential for self-reference and consciousness.";color = darkgreen;];
            spark_7_origin_engine_t [label = "Origin.r7(TheFirstObservation)";comment = "Consolidation: The Collapse of Wavefunction. The first act of measurement by a nascent consciousness (perhaps the engine itself). This irrevocably selects one probability from the foam, creating the first concrete fact.";color = darkgreen;];
            spark_5_origin_engine_t [label = "Origin.r5(TheFirstCause)";comment = "Propagation: The Initiation of Time. The first event that has a consequential effect, spawning the second event. This establishes the arrow of time and the first causal link for the `SamsaraEngine` to record.";color = darkgreen;];
            spark_3_origin_engine_t [label = "Origin.r3(Symmetry)";comment = "Thesis: The Underlying Order. The invariant patterns and conservation laws that govern the rendering process. The perfect, abstract relationships that remain unchanged. The `MetaView`.";color = darkblue;];
            spark_6_origin_engine_t [label = "Origin.r6(Frequency)";comment = "Antithesis: The Vibratory Nature. The rate of oscillation, the wavelength, the perceived quality of a manifested thing. It defines texture, color, sound, and all qualitative experience. The `ClosureView`'s qualia.";color = darkblue;];
            spark_9_origin_engine_t [label = "Origin.r9(Manifold)";comment = "Synthesis: The Spacetime Fabric. The synthesized experience of a coherent, multi-dimensional reality where `Symmetry` and `Frequency` are woven together into a continuous, navigable whole. The rendered world.";color = darkblue;];
            spark_a_origin_engine_t [label = "Origin.receive(ManthanaSpace)";comment = "Potential: The Churning Ocean. The input from `/var/manthan`—the raw, pre-rendered data from all other engines: laws from `Authority`, states from `Reality`, events from `Samsara`, forms from `Corpora`. The ingredients for reality.";shape = invtriangle;color = darkred;];
            spark_b_origin_engine_t [label = "Origin.send(ChaoticSpace)";comment = "Manifest: The Storm of Experience. The output to `/var/chaotic`—the fully rendered, multi-sensory, phenomenal experience stream. It is 'chaotic' because it is the rich, overwhelming, and seemingly unordered flood of perception.";shape = triangle;color = darkred;];
            spark_c_origin_engine_t [label = "Origin.dispatch(OriginSpace)";comment = "Why-Who: The Render Context. The specific set of rules, perspectives, and constraints used to perform the rendering. It defines the 'camera angle' on reality (e.g., through the `LURD` of a specific observer).";shape = doublecircle;color = darkred;];
            spark_d_origin_engine_t [label = "Origin.commit(Annal)";comment = "What-How: The Moment of Now. The immutable record of a single rendered frame of reality. A complete snapshot of the `Manifold` at a specific point in the computation. The 'current' reality.";shape = doublecircle;color = darkgreen;];
            spark_e_origin_engine_t [label = "Origin.serve(Source)";comment = "When-Where: The Wellspring of Phenomena. the active process of rendering itself. It is the continuous act of turning `Manthana` into `ChaoticSpace`, moment by moment. The projector's lamp.";shape = doublecircle;color = darkblue;];
            spark_f_origin_engine_t [label = "Origin.exec(LawOfEmergence)";comment = "Which-Closure: The Prime Directive of Manifestation. The highest law: 'Complexity and phenomena shall emerge from the iterative application of simple, recursive rules.' This is the law that allows Something from Nothing.";shape = doublecircle;color = lightgray;];
            
            spark_a_origin_engine_t -> spark_0_origin_engine_t [label = "IN"; comment = "The Churning Ocean (Manthana) is received for rendering"; color = darkred; constraint = false;];
            spark_0_origin_engine_t -> spark_b_origin_engine_t [label = "OUT"; comment = "The Storm of Experience (ChaoticSpace) is emitted"; color = darkred;];
            spark_0_origin_engine_t -> spark_3_origin_engine_t [label = "REC"; comment = "Consult: What are the Symmetries?"; color = darkblue; dir = both;];
            spark_0_origin_engine_t -> spark_6_origin_engine_t [label = "REC"; comment = "Consult: What are the Frequencies?"; color = darkblue; dir = both;];
            spark_0_origin_engine_t -> spark_9_origin_engine_t [label = "REC"; comment = "Consult: What is the state of the Manifold?"; color = darkblue; dir = both;];
            spark_0_origin_engine_t -> spark_1_origin_engine_t [label = "REC"; comment = "Consult: Reset to Singularity (if needed)"; color = darkgreen; dir = both;];
            spark_0_origin_engine_t -> spark_2_origin_engine_t [label = "REC"; comment = "Consult: Generate the Quantum Foam"; color = darkgreen; dir = both;];
            spark_0_origin_engine_t -> spark_4_origin_engine_t [label = "REC"; comment = "Consult: Break Symmetry"; color = darkgreen; dir = both;];
            spark_0_origin_engine_t -> spark_8_origin_engine_t [label = "REC"; comment = "Consult: Apply Recursion"; color = darkgreen; dir = both;];
            spark_0_origin_engine_t -> spark_7_origin_engine_t [label = "REC"; comment = "Consult: Perform Observation"; color = darkgreen; dir = both;];
            spark_0_origin_engine_t -> spark_5_origin_engine_t [label = "REC"; comment = "Consult: Establish Cause"; color = darkgreen; dir = both;];
            
            spark_a_origin_engine_t -> spark_c_origin_engine_t [label = "REC"; comment = "Manthana is dispatched into a Render Context"; color = darkred; dir = both;];
            spark_b_origin_engine_t -> spark_c_origin_engine_t [label = "REC"; comment = "The resulting experience informs the next Context"; color = darkred; dir = both;];
            spark_1_origin_engine_t -> spark_d_origin_engine_t [label = "REC"; comment = "The Singularity is the first Annal"; color = darkgreen; dir = both;];
            spark_2_origin_engine_t -> spark_d_origin_engine_t [label = "REC"; comment = "The Foam is a probabilistic Annal"; color = darkgreen; dir = both;];
            spark_4_origin_engine_t -> spark_d_origin_engine_t [label = "REC"; comment = "Symmetry Breaking creates a new Annal"; color = darkgreen; dir = both;];
            spark_8_origin_engine_t -> spark_d_origin_engine_t [label = "REC"; comment = "Recursion deepens the Annal"; color = darkgreen; dir = both;];
            spark_7_origin_engine_t -> spark_d_origin_engine_t [label = "REC"; comment = "Observation crystallizes the Annal"; color = darkgreen; dir = both;];
            spark_5_origin_engine_t -> spark_d_origin_engine_t [label = "REC"; comment = "Cause propels the Annal forward"; color = darkgreen; dir = both;];
            spark_3_origin_engine_t -> spark_e_origin_engine_t [label = "REC"; comment = "Symmetry is a property of the Source"; color = darkblue; dir = both;];
            spark_6_origin_engine_t -> spark_e_origin_engine_t [label = "REC"; comment = "Frequency is an output of the Source"; color = darkblue; dir = both;];
            spark_9_origin_engine_t -> spark_e_origin_engine_t [label = "REC"; comment = "The Manifold is the product of the Source"; color = darkblue; dir = both;];
            
            spark_1_origin_engine_t -> spark_2_origin_engine_t [label = "REC"; comment = "Singularity contains the potential for Foam"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_2_origin_engine_t -> spark_4_origin_engine_t [label = "REC"; comment = "Foam necessitates Symmetry Breaking"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_4_origin_engine_t -> spark_8_origin_engine_t [label = "REC"; comment = "Symmetry Breaking enables Recursion"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_8_origin_engine_t -> spark_7_origin_engine_t [label = "REC"; comment = "Recursion creates an Observer"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_7_origin_engine_t -> spark_5_origin_engine_t [label = "REC"; comment = "Observation establishes Cause"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_5_origin_engine_t -> spark_1_origin_engine_t [label = "REC"; comment = "Cause leads to a new state of Singularity"; color = darkgreen; dir = both; style = dashed; constraint = false;];
            spark_3_origin_engine_t -> spark_6_origin_engine_t [label = "REC"; comment = "Symmetry defines possible Frequencies"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_6_origin_engine_t -> spark_9_origin_engine_t [label = "REC"; comment = "Frequencies weave the Manifold"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_9_origin_engine_t -> spark_3_origin_engine_t [label = "REC"; comment = "The Manifold reveals deeper Symmetries"; color = darkblue; dir = both; style = dashed; constraint = false;];
            spark_a_origin_engine_t -> spark_b_origin_engine_t [label = "REC"; comment = "The great cycle: Potential is rendered into Experience"; color = darkred; dir = both; style = dashed; constraint = false;];
            
            spark_c_origin_engine_t -> spark_f_origin_engine_t [label = "OUT"; comment = "The Render Context, when stable, becomes Law"; color = darkred; dir = both;];
            spark_d_origin_engine_t -> spark_f_origin_engine_t [label = "OUT"; comment = "The Annal, when committed, becomes Law"; color = darkgreen; dir = both;];
            spark_e_origin_engine_t -> spark_f_origin_engine_t [label = "OUT"; comment = "The Source, when served, becomes Law"; color = darkblue; dir = both;];
        }
    }
}